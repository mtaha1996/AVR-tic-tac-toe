
AVRASM ver. 2.1.30  C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm Sat Jan 27 10:27:22 2018

C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1091): warning: Register r7 already defined by the .DEF directive
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1096): warning: Register r12 already defined by the .DEF directive
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _turn=R4
                 	.DEF _turn_msb=R5
                 	.DEF _c_end=R6
                 	.DEF _c_end_msb=R7
                 	.DEF _p1=R8
                 	.DEF _p1_msb=R9
                 	.DEF _p2=R10
                 	.DEF _p2_msb=R11
                 	.DEF _round=R12
                 	.DEF _round_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0161 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _font5x7:
00002a 0705
00002b 6020
00002c 0000
00002d 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00002e 0000
00002f 5f00
000030 0000
000031 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
000032 0700
000033 1400
000034 147f
000035 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000036 2a24
000037 2a7f
000038 2312
000039 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
00003a 6264
00003b 4936
00003c 2255
00003d 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00003e 0305
00003f 0000
000040 1c00
000041 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
000042 0000
000043 2241
000044 001c
000045 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000046 2a1c
000047 0808
000048 3e08
000049 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
00004a 5000
00004b 0030
00004c 0800
00004d 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00004e 0808
00004f 3000
000050 0030
000051 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
000052 0810
000053 0204
000054 513e
000055 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000056 003e
000057 7f42
000058 0040
000059 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
00005a 4951
00005b 2146
00005c 4541
00005d 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00005e 1418
00005f 7f12
000060 2710
000061 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
000062 3945
000063 4a3c
000064 4949
000065 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000066 0971
000067 0305
000068 4936
000069 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
00006a 0636
00006b 4949
00006c 1e29
00006d 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00006e 0036
00006f 0000
000070 3656
000071 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
000072 0800
000073 2214
000074 1441
000075 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000076 1414
000077 2241
000078 0814
000079 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
00007a 5101
00007b 0609
00007c 4932
00007d 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00007e 7e3e
00007f 1111
000080 7e11
000081 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
000082 4949
000083 3e36
000084 4141
000085 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
000086 417f
000087 2241
000088 7f1c
000089 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
00008a 4149
00008b 097f
00008c 0109
00008d 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
00008e 4141
00008f 3251
000090 087f
000091 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
000092 007f
000093 7f41
000094 0041
000095 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
000096 3f41
000097 7f01
000098 1408
000099 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
00009a 407f
00009b 4040
00009c 7f40
00009d 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
00009e 7f02
00009f 047f
0000a0 1008
0000a1 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000a2 4141
0000a3 3e41
0000a4 097f
0000a5 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000a6 3e06
0000a7 5141
0000a8 5e21
0000a9 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000aa 2919
0000ab 4646
0000ac 4949
0000ad 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ae 0101
0000af 017f
0000b0 3f01
0000b1 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000b2 3f40
0000b3 201f
0000b4 2040
0000b5 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000b6 1820
0000b7 7f20
0000b8 1463
0000b9 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000ba 0363
0000bb 7804
0000bc 0304
0000bd 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000be 4549
0000bf 0043
0000c0 7f00
0000c1 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000c2 0402
0000c3 1008
0000c4 4120
0000c5 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000c6 0000
0000c7 0204
0000c8 0201
0000c9 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000ca 4040
0000cb 4040
0000cc 0100
0000cd 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ce 2000
0000cf 5454
0000d0 7854
0000d1 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000d2 4444
0000d3 3838
0000d4 4444
0000d5 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000d6 4438
0000d7 4844
0000d8 387f
0000d9 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000da 1854
0000db 7e08
0000dc 0109
0000dd 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000de 5414
0000df 3c54
0000e0 087f
0000e1 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000e2 0078
0000e3 7d44
0000e4 0040
0000e5 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000e6 3d44
0000e7 0000
0000e8 107f
0000e9 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000ea 4100
0000eb 407f
0000ec 7c00
0000ed 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000ee 7804
0000ef 087c
0000f0 0404
0000f1 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000f2 4444
0000f3 3844
0000f4 147c
0000f5 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000f6 0808
0000f7 1414
0000f8 7c18
0000f9 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000fa 0404
0000fb 4808
0000fc 5454
0000fd 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000fe 3f04
0000ff 4044
000100 3c20
000101 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
000102 7c20
000103 201c
000104 2040
000105 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000106 3040
000107 3c40
000108 2844
000109 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
00010a 0c44
00010b 5050
00010c 3c50
00010d 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00010e 4c54
00010f 0044
000110 3608
000111 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
000112 0000
000113 007f
000114 0000
000115 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000116 0008
000117 0102
000118 0402
000119 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
00011a 4141
00011b 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
00011c 0100
00011d 0703
00011e 1f0f
00011f 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1192): warning: .cseg .db misalignment - padding zero byte
000120 00ff      	.DB  0xFF
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000121 0000
000122 0000      	.DB  0x0,0x0,0x0,0x0
000123 0000
000124 0000      	.DB  0x0,0x0,0x0,0x0
000125 0000      	.DB  0x0,0x0
                 
                 _0x0:
000126 3150
000127 3000
000128 5000
000129 0032      	.DB  0x50,0x31,0x0,0x30,0x0,0x50,0x32,0x0
00012a 0052
00012b 7554
00012c 6e72
00012d 203a      	.DB  0x52,0x0,0x54,0x75,0x72,0x6E,0x3A,0x20
00012e 5800
00012f 4f00
000130 5800
000131 204f      	.DB  0x0,0x58,0x0,0x4F,0x0,0x58,0x4F,0x20
000132 7962
000133 5420
000134 4d26
000135 5000      	.DB  0x62,0x79,0x20,0x54,0x26,0x4D,0x0,0x50
000136 616c
000137 6579
000138 2072
000139 2031      	.DB  0x6C,0x61,0x79,0x65,0x72,0x20,0x31,0x20
00013a 6957
00013b 736e
00013c 2120
00013d 5000      	.DB  0x57,0x69,0x6E,0x73,0x20,0x21,0x0,0x50
00013e 616c
00013f 6579
000140 2072
000141 2032      	.DB  0x6C,0x61,0x79,0x65,0x72,0x20,0x32,0x20
000142 6957
000143 736e
000144 2120
000145 2100      	.DB  0x57,0x69,0x6E,0x73,0x20,0x21,0x0,0x21
000146 4420
000147 6172
000148 2077
000149 0021      	.DB  0x20,0x44,0x72,0x61,0x77,0x20,0x21,0x0
00014a 0033
00014b 0034
00014c 0035
00014d 204f      	.DB  0x33,0x0,0x34,0x0,0x35,0x0,0x4F,0x20
00014e 6977
00014f 736e
000150 0021
000151 2058      	.DB  0x77,0x69,0x6E,0x73,0x21,0x0,0x58,0x20
000152 6977
000153 006e      	.DB  0x77,0x69,0x6E,0x0
                 _0x20C0060:
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1214): warning: .cseg .db misalignment - padding zero byte
000154 0001      	.DB  0x1
                 _0x20C0000:
000155 4e2d
000156 4e41
000157 4900
000158 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\TAHA\Desktop\GLCD\Debug\List\glcd.asm(1217): warning: .cseg .db misalignment - padding zero byte
000159 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00015a 000a      	.DW  0x0A
00015b 0004      	.DW  0x04
00015c 0242      	.DW  __REG_VARS*2
                 
00015d 0001      	.DW  0x01
00015e 0292      	.DW  __seed_G106
00015f 02a8      	.DW  _0x20C0060*2
                 
                 _0xFFFFFFFF:
000160 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000161 94f8      	CLI
000162 27ee      	CLR  R30
000163 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000164 e0f1      	LDI  R31,1
000165 bffb      	OUT  GICR,R31
000166 bfeb      	OUT  GICR,R30
000167 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000168 e08d      	LDI  R24,(14-2)+1
000169 e0a2      	LDI  R26,2
00016a 27bb      	CLR  R27
                 __CLEAR_REG:
00016b 93ed      	ST   X+,R30
00016c 958a      	DEC  R24
00016d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00016e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00016f e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000170 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000171 93ed      	ST   X+,R30
000172 9701      	SBIW R24,1
000173 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000174 ebe4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000175 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000176 9185      	LPM  R24,Z+
000177 9195      	LPM  R25,Z+
000178 9700      	SBIW R24,0
000179 f061      	BREQ __GLOBAL_INI_END
00017a 91a5      	LPM  R26,Z+
00017b 91b5      	LPM  R27,Z+
00017c 9005      	LPM  R0,Z+
00017d 9015      	LPM  R1,Z+
00017e 01bf      	MOVW R22,R30
00017f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000180 9005      	LPM  R0,Z+
000181 920d      	ST   X+,R0
000182 9701      	SBIW R24,1
000183 f7e1      	BRNE __GLOBAL_INI_LOOP
000184 01fb      	MOVW R30,R22
000185 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000186 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000187 bfed      	OUT  SPL,R30
000188 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000189 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00018a e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00018b e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00018c 940c 0626 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*
                 ; *
                 ; * Author: T&M
                 ; */
                 ;#include <glcd.h>
                 ;#include <font5x7.h>
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;int turn = 0; // 0 -> X , 1 -> O;
                 ;int table[3][3];
                 ;int c_end = 0;
                 ;int p1=0;
                 ;int p2=0;
                 ;int round = 0;
                 ;
                 ;
                 ;
                 ;void config_LCD(){
                 ; 0000 0013 void config_LCD(){
                 
                 	.CSEG
                 _config_LCD:
                 ; .FSTART _config_LCD
                 ; 0000 0014     GLCDINIT_t glcd_init_data;
                 ; 0000 0015     glcd_init_data.font=font5x7;
00018e 9726      	SBIW R28,6
                 ;	glcd_init_data -> Y+0
00018f e5e4      	LDI  R30,LOW(_font5x7*2)
000190 e0f0      	LDI  R31,HIGH(_font5x7*2)
000191 83e8      	ST   Y,R30
000192 83f9      	STD  Y+1,R31
                 ; 0000 0016     glcd_init(&glcd_init_data);
000193 01de      	MOVW R26,R28
000194 940e 06d7 	CALL _glcd_init
                 ; 0000 0017 }
000196 9626      	ADIW R28,6
000197 9508      	RET
                 ; .FEND
                 ;
                 ;void config_Ports(){
                 ; 0000 0019 void config_Ports(){
                 _config_Ports:
                 ; .FSTART _config_Ports
                 ; 0000 001A     DDRC = 0x00;
000198 e0e0      	LDI  R30,LOW(0)
000199 bbe4      	OUT  0x14,R30
                 ; 0000 001B     PORTC = 0xFF;
00019a efef      	LDI  R30,LOW(255)
00019b bbe5      	OUT  0x15,R30
                 ; 0000 001C     DDRD = 0x00;
00019c e0e0      	LDI  R30,LOW(0)
00019d bbe1      	OUT  0x11,R30
                 ; 0000 001D     PORTD = 0xFF;
00019e efef      	LDI  R30,LOW(255)
00019f bbe2      	OUT  0x12,R30
                 ; 0000 001E }
0001a0 9508      	RET
                 ; .FEND
                 ;
                 ;void reset(){
                 ; 0000 0020 void reset(){
                 _reset:
                 ; .FSTART _reset
                 ; 0000 0021 
                 ; 0000 0022     int i,j;
                 ; 0000 0023     c_end = 0 ;
0001a1 940e 0e7f 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
0001a3 2466      	CLR  R6
0001a4 2477      	CLR  R7
                 ; 0000 0024     //turn=0;
                 ; 0000 0025     p1 = 0;
0001a5 2488      	CLR  R8
0001a6 2499      	CLR  R9
                 ; 0000 0026     p2 = 0;
0001a7 24aa      	CLR  R10
0001a8 24bb      	CLR  R11
                 ; 0000 0027     round = 1;
0001a9 e0e1      	LDI  R30,LOW(1)
0001aa e0f0      	LDI  R31,HIGH(1)
0001ab 016f      	MOVW R12,R30
                 ; 0000 0028 
                 ; 0000 0029 
                 ; 0000 002A     glcd_clear();
0001ac 940e 073c 	CALL _glcd_clear
                 ; 0000 002B 
                 ; 0000 002C 
                 ; 0000 002D 
                 ; 0000 002E 
                 ; 0000 002F     glcd_line(21,0,21,63);
0001ae 940e 0c67 	CALL SUBOPT_0x0
                 ; 0000 0030     glcd_line(0,21,63,21);
                 ; 0000 0031     glcd_line(42,0,42,63);
                 ; 0000 0032     glcd_line(0,42,63,42);
                 ; 0000 0033 
                 ; 0000 0034     glcd_outtextxyf(80,0,"P1");
0001b0 940e 0c8e 	CALL SUBOPT_0x1
                 ; 0000 0035     glcd_outtextxyf(80,10,"0");
0001b2 940e 0c94 	CALL SUBOPT_0x2
0001b4 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 0036     glcd_outtextxyf(100,0,"P2");
0001b6 940e 0c9b 	CALL SUBOPT_0x3
                 ; 0000 0037     glcd_outtextxyf(100,10,"0");
0001b8 940e 0ca3 	CALL SUBOPT_0x4
0001ba 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 0038     glcd_outtextxyf(120,0,"R");
0001bc 940e 0caa 	CALL SUBOPT_0x5
                 ; 0000 0039     glcd_outtextxyf(120,10,"1");
0001be 940e 0cb2 	CALL SUBOPT_0x6
0001c0 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 003A 
                 ; 0000 003B     glcd_outtextxyf(80,20,"Turn: ");
0001c2 e5e0      	LDI  R30,LOW(80)
0001c3 93ea      	ST   -Y,R30
0001c4 940e 0cb9 	CALL SUBOPT_0x7
                 ; 0000 003C 
                 ; 0000 003D     if(turn==0){
0001c6 f429      	BRNE _0x3
                 ; 0000 003E     glcd_outtextxyf(110,20,"X");
0001c7 940e 0cc2 	CALL SUBOPT_0x8
                +
0001c9 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
0001ca e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
0001cb c004      	RJMP _0xAF
                 ; 0000 003F     }
                 ; 0000 0040     else{
                 _0x3:
                 ; 0000 0041     glcd_outtextxyf(110,20,"O");
0001cc 940e 0cc2 	CALL SUBOPT_0x8
                +
0001ce e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
0001cf e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
                 _0xAF:
0001d0 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 0042     }
                 ; 0000 0043 
                 ; 0000 0044 
                 ; 0000 0045     // clear table
                 ; 0000 0046     for(i=0;i<3;i++){
                +
0001d2 e000     +LDI R16 , LOW ( 0 )
0001d3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x6:
                +
0001d4 3003     +CPI R16 , LOW ( 3 )
0001d5 e0e0     +LDI R30 , HIGH ( 3 )
0001d6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
0001d7 f474      	BRGE _0x7
                 ; 0000 0047     for(j=0;j<3;j++){
                +
0001d8 e020     +LDI R18 , LOW ( 0 )
0001d9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x9:
                +
0001da 3023     +CPI R18 , LOW ( 3 )
0001db e0e0     +LDI R30 , HIGH ( 3 )
0001dc 073e     +CPC R19 , R30
                 	__CPWRN 18,19,3
0001dd f42c      	BRGE _0xA
                 ; 0000 0048         table[i][j] = 2 ;
0001de 940e 0cc7 	CALL SUBOPT_0x9
                 ; 0000 0049         }
                +
0001e0 5f2f     +SUBI R18 , LOW ( - 1 )
0001e1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0001e2 cff7      	RJMP _0x9
                 _0xA:
                 ; 0000 004A     }
                +
0001e3 5f0f     +SUBI R16 , LOW ( - 1 )
0001e4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0001e5 cfee      	RJMP _0x6
                 _0x7:
                 ; 0000 004B 
                 ; 0000 004C     glcd_outtextxyf(70,56,"XO by T&M");
0001e6 940e 0cd9 	CALL SUBOPT_0xA
                 ; 0000 004D }
0001e8 c05f      	RJMP _0x210000B
                 ; .FEND
                 ;
                 ;void reset_without_Button(){
                 ; 0000 004F void reset_without_Button(){
                 _reset_without_Button:
                 ; .FSTART _reset_without_Button
                 ; 0000 0050 
                 ; 0000 0051     int i,j;
                 ; 0000 0052     c_end = 0 ;
0001e9 940e 0e7f 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
0001eb 2466      	CLR  R6
0001ec 2477      	CLR  R7
                 ; 0000 0053     //turn=0;
                 ; 0000 0054 
                 ; 0000 0055     if (round <=5){
0001ed e0e5      	LDI  R30,LOW(5)
0001ee e0f0      	LDI  R31,HIGH(5)
0001ef 15ec      	CP   R30,R12
0001f0 05fd      	CPC  R31,R13
0001f1 f19c      	BRLT _0xB
                 ; 0000 0056         round += 1;
0001f2 01f6      	MOVW R30,R12
0001f3 9631      	ADIW R30,1
0001f4 016f      	MOVW R12,R30
                 ; 0000 0057 
                 ; 0000 0058             glcd_clear();
0001f5 940e 073c 	CALL _glcd_clear
                 ; 0000 0059 
                 ; 0000 005A             glcd_outtextxyf(80,0,"P1");
0001f7 e5e0      	LDI  R30,LOW(80)
0001f8 93ea      	ST   -Y,R30
0001f9 940e 0c8e 	CALL SUBOPT_0x1
                 ; 0000 005B             glcd_outtextxyf(100,0,"P2");
0001fb 940e 0c9b 	CALL SUBOPT_0x3
                 ; 0000 005C             glcd_outtextxyf(120,0,"R");
0001fd 940e 0caa 	CALL SUBOPT_0x5
                 ; 0000 005D 
                 ; 0000 005E 
                 ; 0000 005F 
                 ; 0000 0060             glcd_line(21,0,21,63);
0001ff 940e 0c67 	CALL SUBOPT_0x0
                 ; 0000 0061             glcd_line(0,21,63,21);
                 ; 0000 0062             glcd_line(42,0,42,63);
                 ; 0000 0063             glcd_line(0,42,63,42);
                 ; 0000 0064 
                 ; 0000 0065             glcd_outtextxyf(80,20,"Turn: ");
000201 940e 0cb9 	CALL SUBOPT_0x7
                 ; 0000 0066 
                 ; 0000 0067             if(turn==0){
000203 f429      	BRNE _0xC
                 ; 0000 0068             glcd_outtextxyf(110,20,"X");
000204 940e 0cc2 	CALL SUBOPT_0x8
                +
000206 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
000207 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
000208 c004      	RJMP _0xB0
                 ; 0000 0069             }
                 ; 0000 006A             else{
                 _0xC:
                 ; 0000 006B             glcd_outtextxyf(110,20,"O");
000209 940e 0cc2 	CALL SUBOPT_0x8
                +
00020b e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
00020c e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
                 _0xB0:
00020d 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 006C             }
                 ; 0000 006D 
                 ; 0000 006E     // clear table
                 ; 0000 006F     for(i=0;i<3;i++){
                +
00020f e000     +LDI R16 , LOW ( 0 )
000210 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xF:
                +
000211 3003     +CPI R16 , LOW ( 3 )
000212 e0e0     +LDI R30 , HIGH ( 3 )
000213 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
000214 f474      	BRGE _0x10
                 ; 0000 0070     for(j=0;j<3;j++){
                +
000215 e020     +LDI R18 , LOW ( 0 )
000216 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12:
                +
000217 3023     +CPI R18 , LOW ( 3 )
000218 e0e0     +LDI R30 , HIGH ( 3 )
000219 073e     +CPC R19 , R30
                 	__CPWRN 18,19,3
00021a f42c      	BRGE _0x13
                 ; 0000 0071         table[i][j] = 2 ;
00021b 940e 0cc7 	CALL SUBOPT_0x9
                 ; 0000 0072         }
                +
00021d 5f2f     +SUBI R18 , LOW ( - 1 )
00021e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00021f cff7      	RJMP _0x12
                 _0x13:
                 ; 0000 0073     }
                +
000220 5f0f     +SUBI R16 , LOW ( - 1 )
000221 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000222 cfee      	RJMP _0xF
                 _0x10:
                 ; 0000 0074 
                 ; 0000 0075     glcd_outtextxyf(70,56,"XO by T&M");
000223 940e 0cd9 	CALL SUBOPT_0xA
                 ; 0000 0076 
                 ; 0000 0077     }
                 ; 0000 0078 
                 ; 0000 0079 
                 ; 0000 007A 
                 ; 0000 007B 
                 ; 0000 007C     if(round == 6){
                 _0xB:
000225 e0e6      	LDI  R30,LOW(6)
000226 e0f0      	LDI  R31,HIGH(6)
000227 15ec      	CP   R30,R12
000228 05fd      	CPC  R31,R13
000229 f4f1      	BRNE _0x14
                 ; 0000 007D         if(p1>p2){
                +
00022a 14a8     +CP R10 , R8
00022b 04b9     +CPC R11 , R9
                 	__CPWRR 10,11,8,9
00022c f434      	BRGE _0x15
                 ; 0000 007E             glcd_clear();
00022d 940e 0ce1 	CALL SUBOPT_0xB
                 ; 0000 007F             glcd_outtextxyf(20,32,"Player 1 Wins !");
                +
00022f e6ab     +LDI R26 , LOW ( 2 * _0x0 + ( 31 ) )
000230 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 31 ) )
                 	__POINTW2FN _0x0,31
000231 940e 0ce8 	CALL SUBOPT_0xC
                 ; 0000 0080             delay_ms(2000);
                 ; 0000 0081         }
                 ; 0000 0082         if(p1<p2){
                 _0x15:
                +
000233 148a     +CP R8 , R10
000234 049b     +CPC R9 , R11
                 	__CPWRR 8,9,10,11
000235 f434      	BRGE _0x16
                 ; 0000 0083             glcd_clear();
000236 940e 0ce1 	CALL SUBOPT_0xB
                 ; 0000 0084             glcd_outtextxyf(20,32,"Player 2 Wins !");
                +
000238 e7ab     +LDI R26 , LOW ( 2 * _0x0 + ( 47 ) )
000239 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 47 ) )
                 	__POINTW2FN _0x0,47
00023a 940e 0ce8 	CALL SUBOPT_0xC
                 ; 0000 0085             delay_ms(2000);
                 ; 0000 0086         }
                 ; 0000 0087         if(p1==p2) {
                 _0x16:
                +
00023c 14a8     +CP R10 , R8
00023d 04b9     +CPC R11 , R9
                 	__CPWRR 10,11,8,9
00023e f441      	BRNE _0x17
                 ; 0000 0088             glcd_clear();
00023f 940e 073c 	CALL _glcd_clear
                 ; 0000 0089             glcd_outtextxyf(50,32,"! Draw !");
000241 940e 0cee 	CALL SUBOPT_0xD
                +
000243 e8ab     +LDI R26 , LOW ( 2 * _0x0 + ( 63 ) )
000244 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 63 ) )
                 	__POINTW2FN _0x0,63
000245 940e 0ce8 	CALL SUBOPT_0xC
                 ; 0000 008A             delay_ms(2000);
                 ; 0000 008B         }
                 ; 0000 008C 
                 ; 0000 008D         reset();
                 _0x17:
000247 df59      	RCALL _reset
                 ; 0000 008E     }
                 ; 0000 008F 
                 ; 0000 0090 
                 ; 0000 0091 
                 ; 0000 0092 
                 ; 0000 0093 }
                 _0x14:
                 _0x210000B:
000248 940e 0e86 	CALL __LOADLOCR4
00024a 9624      	ADIW R28,4
00024b 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void scores(char winner)
                 ; 0000 0097 {
                 _scores:
                 ; .FSTART _scores
                 ; 0000 0098     if(winner == 'X'){
00024c 93aa      	ST   -Y,R26
                 ;	winner -> Y+0
00024d 81a8      	LD   R26,Y
00024e 35a8      	CPI  R26,LOW(0x58)
00024f f419      	BRNE _0x18
                 ; 0000 0099         p1 += 1 ;
000250 01f4      	MOVW R30,R8
000251 9631      	ADIW R30,1
000252 014f      	MOVW R8,R30
                 ; 0000 009A     }
                 ; 0000 009B     if(winner == 'O'){
                 _0x18:
000253 81a8      	LD   R26,Y
000254 34af      	CPI  R26,LOW(0x4F)
000255 f419      	BRNE _0x19
                 ; 0000 009C         p2 += 1 ;
000256 01f5      	MOVW R30,R10
000257 9631      	ADIW R30,1
000258 015f      	MOVW R10,R30
                 ; 0000 009D     }
                 ; 0000 009E 
                 ; 0000 009F 
                 ; 0000 00A0     reset_without_Button();
                 _0x19:
000259 df8f      	RCALL _reset_without_Button
                 ; 0000 00A1 
                 ; 0000 00A2 
                 ; 0000 00A3     switch (p1) {
00025a 01f4      	MOVW R30,R8
                 ; 0000 00A4     case 0:
00025b 9730      	SBIW R30,0
00025c f419      	BRNE _0x1D
                 ; 0000 00A5             glcd_outtextxyf(80,10,"0");
00025d 940e 0c94 	CALL SUBOPT_0x2
00025f c023      	RJMP _0xB1
                 ; 0000 00A6     break;
                 ; 0000 00A7 
                 ; 0000 00A8     case 1:
                 _0x1D:
000260 30e1      	CPI  R30,LOW(0x1)
000261 e0a0      	LDI  R26,HIGH(0x1)
000262 07fa      	CPC  R31,R26
000263 f429      	BRNE _0x1E
                 ; 0000 00A9             glcd_outtextxyf(80,10,"1");
000264 940e 0cf3 	CALL SUBOPT_0xE
                +
000266 e4ad     +LDI R26 , LOW ( 2 * _0x0 + ( 1 ) )
000267 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 1 ) )
                 	__POINTW2FN _0x0,1
000268 c01a      	RJMP _0xB1
                 ; 0000 00AA     break;
                 ; 0000 00AB     case 2:
                 _0x1E:
000269 30e2      	CPI  R30,LOW(0x2)
00026a e0a0      	LDI  R26,HIGH(0x2)
00026b 07fa      	CPC  R31,R26
00026c f429      	BRNE _0x1F
                 ; 0000 00AC             glcd_outtextxyf(80,10,"2");
00026d 940e 0cf3 	CALL SUBOPT_0xE
                +
00026f e5a2     +LDI R26 , LOW ( 2 * _0x0 + ( 6 ) )
000270 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW2FN _0x0,6
000271 c011      	RJMP _0xB1
                 ; 0000 00AD     break;
                 ; 0000 00AE     case 3:
                 _0x1F:
000272 30e3      	CPI  R30,LOW(0x3)
000273 e0a0      	LDI  R26,HIGH(0x3)
000274 07fa      	CPC  R31,R26
000275 f429      	BRNE _0x20
                 ; 0000 00AF             glcd_outtextxyf(80,10,"3");
000276 940e 0cf3 	CALL SUBOPT_0xE
                +
000278 e9a4     +LDI R26 , LOW ( 2 * _0x0 + ( 72 ) )
000279 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 72 ) )
                 	__POINTW2FN _0x0,72
00027a c008      	RJMP _0xB1
                 ; 0000 00B0     break;
                 ; 0000 00B1     case 4:
                 _0x20:
00027b 30e4      	CPI  R30,LOW(0x4)
00027c e0a0      	LDI  R26,HIGH(0x4)
00027d 07fa      	CPC  R31,R26
00027e f431      	BRNE _0x1C
                 ; 0000 00B2             glcd_outtextxyf(80,10,"4");
00027f 940e 0cf3 	CALL SUBOPT_0xE
                +
000281 e9a6     +LDI R26 , LOW ( 2 * _0x0 + ( 74 ) )
000282 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 74 ) )
                 	__POINTW2FN _0x0,74
                 _0xB1:
000283 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 00B3     break;
                 ; 0000 00B4     };
                 _0x1C:
                 ; 0000 00B5 
                 ; 0000 00B6     switch (p2) {
000285 01f5      	MOVW R30,R10
                 ; 0000 00B7     case 0:
000286 9730      	SBIW R30,0
000287 f419      	BRNE _0x25
                 ; 0000 00B8             glcd_outtextxyf(100,10,"0");
000288 940e 0ca3 	CALL SUBOPT_0x4
00028a c023      	RJMP _0xB2
                 ; 0000 00B9     break;
                 ; 0000 00BA 
                 ; 0000 00BB     case 1:
                 _0x25:
00028b 30e1      	CPI  R30,LOW(0x1)
00028c e0a0      	LDI  R26,HIGH(0x1)
00028d 07fa      	CPC  R31,R26
00028e f429      	BRNE _0x26
                 ; 0000 00BC             glcd_outtextxyf(100,10,"1");
00028f 940e 0cf8 	CALL SUBOPT_0xF
                +
000291 e4ad     +LDI R26 , LOW ( 2 * _0x0 + ( 1 ) )
000292 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 1 ) )
                 	__POINTW2FN _0x0,1
000293 c01a      	RJMP _0xB2
                 ; 0000 00BD     break;
                 ; 0000 00BE     case 2:
                 _0x26:
000294 30e2      	CPI  R30,LOW(0x2)
000295 e0a0      	LDI  R26,HIGH(0x2)
000296 07fa      	CPC  R31,R26
000297 f429      	BRNE _0x27
                 ; 0000 00BF             glcd_outtextxyf(100,10,"2");
000298 940e 0cf8 	CALL SUBOPT_0xF
                +
00029a e5a2     +LDI R26 , LOW ( 2 * _0x0 + ( 6 ) )
00029b e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW2FN _0x0,6
00029c c011      	RJMP _0xB2
                 ; 0000 00C0     break;
                 ; 0000 00C1     case 3:
                 _0x27:
00029d 30e3      	CPI  R30,LOW(0x3)
00029e e0a0      	LDI  R26,HIGH(0x3)
00029f 07fa      	CPC  R31,R26
0002a0 f429      	BRNE _0x28
                 ; 0000 00C2             glcd_outtextxyf(100,10,"3");
0002a1 940e 0cf8 	CALL SUBOPT_0xF
                +
0002a3 e9a4     +LDI R26 , LOW ( 2 * _0x0 + ( 72 ) )
0002a4 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 72 ) )
                 	__POINTW2FN _0x0,72
0002a5 c008      	RJMP _0xB2
                 ; 0000 00C3     break;
                 ; 0000 00C4     case 4:
                 _0x28:
0002a6 30e4      	CPI  R30,LOW(0x4)
0002a7 e0a0      	LDI  R26,HIGH(0x4)
0002a8 07fa      	CPC  R31,R26
0002a9 f431      	BRNE _0x24
                 ; 0000 00C5             glcd_outtextxyf(100,10,"4");
0002aa 940e 0cf8 	CALL SUBOPT_0xF
                +
0002ac e9a6     +LDI R26 , LOW ( 2 * _0x0 + ( 74 ) )
0002ad e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 74 ) )
                 	__POINTW2FN _0x0,74
                 _0xB2:
0002ae 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 00C6     break;
                 ; 0000 00C7     };
                 _0x24:
                 ; 0000 00C8 
                 ; 0000 00C9 
                 ; 0000 00CA     switch(round) {
0002b0 01f6      	MOVW R30,R12
                 ; 0000 00CB     case 1:
0002b1 30e1      	CPI  R30,LOW(0x1)
0002b2 e0a0      	LDI  R26,HIGH(0x1)
0002b3 07fa      	CPC  R31,R26
0002b4 f419      	BRNE _0x2D
                 ; 0000 00CC             glcd_outtextxyf(120,10,"1");
0002b5 940e 0cb2 	CALL SUBOPT_0x6
0002b7 c023      	RJMP _0xB3
                 ; 0000 00CD     break;
                 ; 0000 00CE 
                 ; 0000 00CF     case 2:
                 _0x2D:
0002b8 30e2      	CPI  R30,LOW(0x2)
0002b9 e0a0      	LDI  R26,HIGH(0x2)
0002ba 07fa      	CPC  R31,R26
0002bb f429      	BRNE _0x2E
                 ; 0000 00D0             glcd_outtextxyf(120,10,"2");
0002bc 940e 0cfd 	CALL SUBOPT_0x10
                +
0002be e5a2     +LDI R26 , LOW ( 2 * _0x0 + ( 6 ) )
0002bf e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW2FN _0x0,6
0002c0 c01a      	RJMP _0xB3
                 ; 0000 00D1     break;
                 ; 0000 00D2     case 3:
                 _0x2E:
0002c1 30e3      	CPI  R30,LOW(0x3)
0002c2 e0a0      	LDI  R26,HIGH(0x3)
0002c3 07fa      	CPC  R31,R26
0002c4 f429      	BRNE _0x2F
                 ; 0000 00D3             glcd_outtextxyf(120,10,"3");
0002c5 940e 0cfd 	CALL SUBOPT_0x10
                +
0002c7 e9a4     +LDI R26 , LOW ( 2 * _0x0 + ( 72 ) )
0002c8 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 72 ) )
                 	__POINTW2FN _0x0,72
0002c9 c011      	RJMP _0xB3
                 ; 0000 00D4     break;
                 ; 0000 00D5     case 4:
                 _0x2F:
0002ca 30e4      	CPI  R30,LOW(0x4)
0002cb e0a0      	LDI  R26,HIGH(0x4)
0002cc 07fa      	CPC  R31,R26
0002cd f429      	BRNE _0x30
                 ; 0000 00D6             glcd_outtextxyf(120,10,"4");
0002ce 940e 0cfd 	CALL SUBOPT_0x10
                +
0002d0 e9a6     +LDI R26 , LOW ( 2 * _0x0 + ( 74 ) )
0002d1 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 74 ) )
                 	__POINTW2FN _0x0,74
0002d2 c008      	RJMP _0xB3
                 ; 0000 00D7     break;
                 ; 0000 00D8     case 5:
                 _0x30:
0002d3 30e5      	CPI  R30,LOW(0x5)
0002d4 e0a0      	LDI  R26,HIGH(0x5)
0002d5 07fa      	CPC  R31,R26
0002d6 f431      	BRNE _0x2C
                 ; 0000 00D9             glcd_outtextxyf(120,10,"5");
0002d7 940e 0cfd 	CALL SUBOPT_0x10
                +
0002d9 e9a8     +LDI R26 , LOW ( 2 * _0x0 + ( 76 ) )
0002da e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 76 ) )
                 	__POINTW2FN _0x0,76
                 _0xB3:
0002db 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 00DA     break;
                 ; 0000 00DB 
                 ; 0000 00DC     };
                 _0x2C:
                 ; 0000 00DD 
                 ; 0000 00DE 
                 ; 0000 00DF 
                 ; 0000 00E0 
                 ; 0000 00E1 }
0002dd 940c 06c1 	JMP  _0x210000A
                 ; .FEND
                 ;
                 ;void draw_winner_line(int x1, int y1, int x2, int y2)
                 ; 0000 00E4 {
                 _draw_winner_line:
                 ; .FSTART _draw_winner_line
                 ; 0000 00E5     glcd_line(x1,y1,x2,y2);
0002df 93ba      	ST   -Y,R27
0002e0 93aa      	ST   -Y,R26
                 ;	x1 -> Y+6
                 ;	y1 -> Y+4
                 ;	x2 -> Y+2
                 ;	y2 -> Y+0
0002e1 81ee      	LDD  R30,Y+6
0002e2 93ea      	ST   -Y,R30
0002e3 81ed      	LDD  R30,Y+5
0002e4 93ea      	ST   -Y,R30
0002e5 81ec      	LDD  R30,Y+4
0002e6 93ea      	ST   -Y,R30
0002e7 81ab      	LDD  R26,Y+3
0002e8 940e 0af0 	CALL _glcd_line
                 ; 0000 00E6 }
0002ea 9628      	ADIW R28,8
0002eb 9508      	RET
                 ; .FEND
                 ;
                 ;void check_win(int t[3][3]){
                 ; 0000 00E8 void check_win(int t[3][3]){
                 _check_win:
                 ; .FSTART _check_win
                 ; 0000 00E9     if((t[2][2]== 0 && t[0][0]==0 && t[1][1]== 0) || (t[2][2]==1 && t[0][0]==1 && t[1][1]==1) )
0002ec 940e 0d02 	CALL SUBOPT_0x11
                 ;	t -> Y+0
0002ee 9650      	ADIW R26,16
0002ef 940e 0e58 	CALL __GETW1P
0002f1 9730      	SBIW R30,0
0002f2 f441      	BRNE _0x33
0002f3 940e 0d07 	CALL SUBOPT_0x12
0002f5 9730      	SBIW R30,0
0002f6 f421      	BRNE _0x33
0002f7 940e 0d0c 	CALL SUBOPT_0x13
0002f9 9730      	SBIW R30,0
0002fa f079      	BREQ _0x35
                 _0x33:
0002fb 940e 0d12 	CALL SUBOPT_0x14
0002fd 9731      	SBIW R30,1
0002fe f451      	BRNE _0x36
0002ff 940e 0d07 	CALL SUBOPT_0x12
000301 9731      	SBIW R30,1
000302 f431      	BRNE _0x36
000303 940e 0d0c 	CALL SUBOPT_0x13
000305 30e1      	CPI  R30,LOW(0x1)
000306 e0a0      	LDI  R26,HIGH(0x1)
000307 07fa      	CPC  R31,R26
000308 f009      	BREQ _0x35
                 _0x36:
000309 c015      	RJMP _0x32
                 _0x35:
                 ; 0000 00EA    {
                 ; 0000 00EB         draw_winner_line(8,8,55,55);
00030a 940e 0d18 	CALL SUBOPT_0x15
00030c 940e 0d18 	CALL SUBOPT_0x15
00030e 940e 0d1d 	CALL SUBOPT_0x16
000310 940e 0d22 	CALL SUBOPT_0x17
                 ; 0000 00EC         delay_ms(500);
                 ; 0000 00ED         glcd_clear();
                 ; 0000 00EE         if(turn==0){
000312 f429      	BRNE _0x39
                 ; 0000 00EF               glcd_outtextxyf(50,32,"O wins!");
000313 940e 0cee 	CALL SUBOPT_0xD
000315 940e 0d2f 	CALL SUBOPT_0x18
                 ; 0000 00F0               scores('O');
000317 c004      	RJMP _0xB4
                 ; 0000 00F1               delay_ms(500);
                 ; 0000 00F2               //reset_without_Button();
                 ; 0000 00F3         }
                 ; 0000 00F4         else{
                 _0x39:
                 ; 0000 00F5         glcd_outtextxyf(50,32,"X win");
000318 940e 0cee 	CALL SUBOPT_0xD
00031a 940e 0d35 	CALL SUBOPT_0x19
                 ; 0000 00F6         scores('X');
                 _0xB4:
00031c df2f      	RCALL _scores
                 ; 0000 00F7         delay_ms(500);
00031d 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 00F8         //reset_without_Button();
                 ; 0000 00F9         }
                 ; 0000 00FA    }
                 ; 0000 00FB 
                 ; 0000 00FC 
                 ; 0000 00FD    if((t[0][2]== 0 && t[0][0]==0 && t[0][1]== 0) || (t[0][2]==1 && t[0][0]==1 && t[0][1]==1))
                 _0x32:
00031f 940e 0d3f 	CALL SUBOPT_0x1B
000321 9730      	SBIW R30,0
000322 f441      	BRNE _0x3C
000323 940e 0d07 	CALL SUBOPT_0x12
000325 9730      	SBIW R30,0
000326 f421      	BRNE _0x3C
000327 940e 0d45 	CALL SUBOPT_0x1C
000329 9730      	SBIW R30,0
00032a f079      	BREQ _0x3E
                 _0x3C:
00032b 940e 0d3f 	CALL SUBOPT_0x1B
00032d 9731      	SBIW R30,1
00032e f451      	BRNE _0x3F
00032f 940e 0d07 	CALL SUBOPT_0x12
000331 9731      	SBIW R30,1
000332 f431      	BRNE _0x3F
000333 940e 0d45 	CALL SUBOPT_0x1C
000335 30e1      	CPI  R30,LOW(0x1)
000336 e0a0      	LDI  R26,HIGH(0x1)
000337 07fa      	CPC  R31,R26
000338 f009      	BREQ _0x3E
                 _0x3F:
000339 c01e      	RJMP _0x3B
                 _0x3E:
                 ; 0000 00FE    {
                 ; 0000 00FF         draw_winner_line(10,10,55,10);
00033a e0ea      	LDI  R30,LOW(10)
00033b e0f0      	LDI  R31,HIGH(10)
00033c 93fa      	ST   -Y,R31
00033d 93ea      	ST   -Y,R30
00033e 93fa      	ST   -Y,R31
00033f 93ea      	ST   -Y,R30
000340 940e 0d1d 	CALL SUBOPT_0x16
000342 e0aa      	LDI  R26,LOW(10)
000343 e0b0      	LDI  R27,0
000344 df9a      	RCALL _draw_winner_line
                 ; 0000 0100         delay_ms(500);
000345 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 0101         glcd_clear();
000347 940e 073c 	CALL _glcd_clear
                 ; 0000 0102         if(turn==0){
000349 2c04      	MOV  R0,R4
00034a 2805      	OR   R0,R5
00034b f429      	BRNE _0x42
                 ; 0000 0103               glcd_outtextxyf(50,32,"O wins!");
00034c 940e 0cee 	CALL SUBOPT_0xD
00034e 940e 0d2f 	CALL SUBOPT_0x18
                 ; 0000 0104               scores('O');
000350 c004      	RJMP _0xB5
                 ; 0000 0105         delay_ms(500);
                 ; 0000 0106         //reset();
                 ; 0000 0107         }
                 ; 0000 0108         else{
                 _0x42:
                 ; 0000 0109         glcd_outtextxyf(50,32,"X win");
000351 940e 0cee 	CALL SUBOPT_0xD
000353 940e 0d35 	CALL SUBOPT_0x19
                 ; 0000 010A         scores('X');
                 _0xB5:
000355 def6      	RCALL _scores
                 ; 0000 010B         delay_ms(500);
000356 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 010C         //reset();
                 ; 0000 010D         }
                 ; 0000 010E 
                 ; 0000 010F    }
                 ; 0000 0110 
                 ; 0000 0111 
                 ; 0000 0112    if((t[2][0]== 0 && t[1][0]==0 && t[0][0]== 0) || (t[2][0]==1 && t[1][0]==1 && t[0][0]==1))
                 _0x3B:
000358 940e 0d4b 	CALL SUBOPT_0x1D
00035a 9730      	SBIW R30,0
00035b f441      	BRNE _0x45
00035c 940e 0d51 	CALL SUBOPT_0x1E
00035e 9730      	SBIW R30,0
00035f f421      	BRNE _0x45
000360 940e 0d07 	CALL SUBOPT_0x12
000362 9730      	SBIW R30,0
000363 f079      	BREQ _0x47
                 _0x45:
000364 940e 0d4b 	CALL SUBOPT_0x1D
000366 9731      	SBIW R30,1
000367 f451      	BRNE _0x48
000368 940e 0d51 	CALL SUBOPT_0x1E
00036a 9731      	SBIW R30,1
00036b f431      	BRNE _0x48
00036c 940e 0d07 	CALL SUBOPT_0x12
00036e 30e1      	CPI  R30,LOW(0x1)
00036f e0a0      	LDI  R26,HIGH(0x1)
000370 07fa      	CPC  R31,R26
000371 f009      	BREQ _0x47
                 _0x48:
000372 c015      	RJMP _0x44
                 _0x47:
                 ; 0000 0113    {
                 ; 0000 0114         draw_winner_line(8,8,8,55);
000373 940e 0d18 	CALL SUBOPT_0x15
000375 940e 0d18 	CALL SUBOPT_0x15
000377 940e 0d18 	CALL SUBOPT_0x15
000379 940e 0d22 	CALL SUBOPT_0x17
                 ; 0000 0115         delay_ms(500);
                 ; 0000 0116         glcd_clear();
                 ; 0000 0117         if(turn==0){
00037b f429      	BRNE _0x4B
                 ; 0000 0118         glcd_outtextxyf(50,32,"O wins!");
00037c 940e 0cee 	CALL SUBOPT_0xD
00037e 940e 0d2f 	CALL SUBOPT_0x18
                 ; 0000 0119         scores('O');
000380 c004      	RJMP _0xB6
                 ; 0000 011A         delay_ms(500);
                 ; 0000 011B         //reset();
                 ; 0000 011C         }
                 ; 0000 011D         else{
                 _0x4B:
                 ; 0000 011E         glcd_outtextxyf(50,32,"X win");
000381 940e 0cee 	CALL SUBOPT_0xD
000383 940e 0d35 	CALL SUBOPT_0x19
                 ; 0000 011F         scores('X');
                 _0xB6:
000385 dec6      	RCALL _scores
                 ; 0000 0120         delay_ms(500);
000386 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 0121         //reset();
                 ; 0000 0122         }
                 ; 0000 0123 
                 ; 0000 0124    }
                 ; 0000 0125 
                 ; 0000 0126 
                 ; 0000 0127 
                 ; 0000 0128 
                 ; 0000 0129    if(t[1][0]==t[1][1] && t[1][1]==t[1][2])
                 _0x44:
000388 81e8      	LD   R30,Y
000389 81f9      	LDD  R31,Y+1
                +
00038a 8006     +LDD R0 , Z + 6
00038b 8017     +LDD R1 , Z + 6 + 1
                 	__GETWRZ 0,1,6
00038c 940e 0d0c 	CALL SUBOPT_0x13
00038e 15e0      	CP   R30,R0
00038f 05f1      	CPC  R31,R1
000390 f431      	BRNE _0x4E
000391 940e 0d57 	CALL SUBOPT_0x1F
000393 961a      	ADIW R26,10
000394 940e 0d5e 	CALL SUBOPT_0x20
000396 f009      	BREQ _0x4F
                 _0x4E:
000397 c022      	RJMP _0x4D
                 _0x4F:
                 ; 0000 012A    {
                 ; 0000 012B         if(t[1][0]!= 2)
000398 940e 0d51 	CALL SUBOPT_0x1E
00039a 30e2      	CPI  R30,LOW(0x2)
00039b e0a0      	LDI  R26,HIGH(0x2)
00039c 07fa      	CPC  R31,R26
00039d f0e1      	BREQ _0x50
                 ; 0000 012C         {
                 ; 0000 012D             draw_winner_line(8,32,55,32);
00039e 940e 0d18 	CALL SUBOPT_0x15
0003a0 940e 0d63 	CALL SUBOPT_0x21
0003a2 940e 0d1d 	CALL SUBOPT_0x16
0003a4 e2a0      	LDI  R26,LOW(32)
0003a5 e0b0      	LDI  R27,0
0003a6 df38      	RCALL _draw_winner_line
                 ; 0000 012E             delay_ms(500);
0003a7 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 012F             glcd_clear();
0003a9 940e 073c 	CALL _glcd_clear
                 ; 0000 0130             if(turn==0){
0003ab 2c04      	MOV  R0,R4
0003ac 2805      	OR   R0,R5
0003ad f429      	BRNE _0x51
                 ; 0000 0131                   glcd_outtextxyf(50,32,"O wins!");
0003ae 940e 0cee 	CALL SUBOPT_0xD
0003b0 940e 0d2f 	CALL SUBOPT_0x18
                 ; 0000 0132             scores('O');
0003b2 c004      	RJMP _0xB7
                 ; 0000 0133             delay_ms(500);
                 ; 0000 0134             //reset();
                 ; 0000 0135             }
                 ; 0000 0136             else{
                 _0x51:
                 ; 0000 0137             glcd_outtextxyf(50,32,"X win");
0003b3 940e 0cee 	CALL SUBOPT_0xD
0003b5 940e 0d35 	CALL SUBOPT_0x19
                 ; 0000 0138             scores('X');
                 _0xB7:
0003b7 de94      	RCALL _scores
                 ; 0000 0139             delay_ms(500);
0003b8 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 013A             //reset();
                 ; 0000 013B             }
                 ; 0000 013C         }
                 ; 0000 013D    }
                 _0x50:
                 ; 0000 013E 
                 ; 0000 013F 
                 ; 0000 0140    if(t[2][0]==t[2][1] && t[2][1]==t[2][2])
                 _0x4D:
0003ba 81e8      	LD   R30,Y
0003bb 81f9      	LDD  R31,Y+1
                +
0003bc 8404     +LDD R0 , Z + 12
0003bd 8415     +LDD R1 , Z + 12 + 1
                 	__GETWRZ 0,1,12
0003be 81a8      	LD   R26,Y
0003bf 81b9      	LDD  R27,Y+1
0003c0 961e      	ADIW R26,14
0003c1 940e 0d5e 	CALL SUBOPT_0x20
0003c3 f449      	BRNE _0x54
0003c4 81e8      	LD   R30,Y
0003c5 81f9      	LDD  R31,Y+1
                +
0003c6 8406     +LDD R0 , Z + 14
0003c7 8417     +LDD R1 , Z + 14 + 1
                 	__GETWRZ 0,1,14
0003c8 940e 0d12 	CALL SUBOPT_0x14
0003ca 15e0      	CP   R30,R0
0003cb 05f1      	CPC  R31,R1
0003cc f009      	BREQ _0x55
                 _0x54:
0003cd c01b      	RJMP _0x53
                 _0x55:
                 ; 0000 0141    {
                 ; 0000 0142         if(t[2][0]!= 2)
0003ce 940e 0d4b 	CALL SUBOPT_0x1D
0003d0 30e2      	CPI  R30,LOW(0x2)
0003d1 e0a0      	LDI  R26,HIGH(0x2)
0003d2 07fa      	CPC  R31,R26
0003d3 f0a9      	BREQ _0x56
                 ; 0000 0143         {
                 ; 0000 0144             draw_winner_line(8,55,55,55);
0003d4 940e 0d18 	CALL SUBOPT_0x15
0003d6 940e 0d1d 	CALL SUBOPT_0x16
0003d8 940e 0d1d 	CALL SUBOPT_0x16
0003da 940e 0d22 	CALL SUBOPT_0x17
                 ; 0000 0145             delay_ms(500);
                 ; 0000 0146             glcd_clear();
                 ; 0000 0147             if(turn==0){
0003dc f429      	BRNE _0x57
                 ; 0000 0148             glcd_outtextxyf(50,32,"O wins!");
0003dd 940e 0cee 	CALL SUBOPT_0xD
0003df 940e 0d2f 	CALL SUBOPT_0x18
                 ; 0000 0149             scores('O');
0003e1 c004      	RJMP _0xB8
                 ; 0000 014A             delay_ms(500);
                 ; 0000 014B             //reset();
                 ; 0000 014C             }
                 ; 0000 014D             else{
                 _0x57:
                 ; 0000 014E             glcd_outtextxyf(50,32,"X win");
0003e2 940e 0cee 	CALL SUBOPT_0xD
0003e4 940e 0d35 	CALL SUBOPT_0x19
                 ; 0000 014F             scores('X');
                 _0xB8:
0003e6 de65      	RCALL _scores
                 ; 0000 0150             delay_ms(500);
0003e7 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 0151             //reset();
                 ; 0000 0152             }
                 ; 0000 0153         }
                 ; 0000 0154    }
                 _0x56:
                 ; 0000 0155 
                 ; 0000 0156 
                 ; 0000 0157    if(t[0][1]==t[1][1] && t[1][1]==t[2][1])
                 _0x53:
0003e9 81e8      	LD   R30,Y
0003ea 81f9      	LDD  R31,Y+1
                +
0003eb 8002     +LDD R0 , Z + 2
0003ec 8013     +LDD R1 , Z + 2 + 1
                 	__GETWRZ 0,1,2
0003ed 940e 0d0c 	CALL SUBOPT_0x13
0003ef 15e0      	CP   R30,R0
0003f0 05f1      	CPC  R31,R1
0003f1 f431      	BRNE _0x5A
0003f2 940e 0d57 	CALL SUBOPT_0x1F
0003f4 961e      	ADIW R26,14
0003f5 940e 0d5e 	CALL SUBOPT_0x20
0003f7 f009      	BREQ _0x5B
                 _0x5A:
0003f8 c01b      	RJMP _0x59
                 _0x5B:
                 ; 0000 0158    {
                 ; 0000 0159         if(t[0][1]!= 2)
0003f9 940e 0d45 	CALL SUBOPT_0x1C
0003fb 30e2      	CPI  R30,LOW(0x2)
0003fc e0a0      	LDI  R26,HIGH(0x2)
0003fd 07fa      	CPC  R31,R26
0003fe f0a9      	BREQ _0x5C
                 ; 0000 015A         {
                 ; 0000 015B             draw_winner_line(32,8,32,55);
0003ff 940e 0d63 	CALL SUBOPT_0x21
000401 940e 0d18 	CALL SUBOPT_0x15
000403 940e 0d63 	CALL SUBOPT_0x21
000405 940e 0d22 	CALL SUBOPT_0x17
                 ; 0000 015C             delay_ms(500);
                 ; 0000 015D             glcd_clear();
                 ; 0000 015E             if(turn==0){
000407 f429      	BRNE _0x5D
                 ; 0000 015F             glcd_outtextxyf(50,32,"O wins!");
000408 940e 0cee 	CALL SUBOPT_0xD
00040a 940e 0d2f 	CALL SUBOPT_0x18
                 ; 0000 0160             scores('O');
00040c c004      	RJMP _0xB9
                 ; 0000 0161             delay_ms(500);
                 ; 0000 0162             //reset();
                 ; 0000 0163             }
                 ; 0000 0164             else{
                 _0x5D:
                 ; 0000 0165             glcd_outtextxyf(50,32,"X win");
00040d 940e 0cee 	CALL SUBOPT_0xD
00040f 940e 0d35 	CALL SUBOPT_0x19
                 ; 0000 0166             scores('X');
                 _0xB9:
000411 de3a      	RCALL _scores
                 ; 0000 0167             delay_ms(500);
000412 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 0168             //reset();
                 ; 0000 0169             }
                 ; 0000 016A         }
                 ; 0000 016B    }
                 _0x5C:
                 ; 0000 016C 
                 ; 0000 016D 
                 ; 0000 016E    if(t[0][2]==t[1][2] && t[1][2]==t[2][2])
                 _0x59:
000414 81e8      	LD   R30,Y
000415 81f9      	LDD  R31,Y+1
                +
000416 8004     +LDD R0 , Z + 4
000417 8015     +LDD R1 , Z + 4 + 1
                 	__GETWRZ 0,1,4
000418 81a8      	LD   R26,Y
000419 81b9      	LDD  R27,Y+1
00041a 961a      	ADIW R26,10
00041b 940e 0d5e 	CALL SUBOPT_0x20
00041d f449      	BRNE _0x60
00041e 81e8      	LD   R30,Y
00041f 81f9      	LDD  R31,Y+1
                +
000420 8402     +LDD R0 , Z + 10
000421 8413     +LDD R1 , Z + 10 + 1
                 	__GETWRZ 0,1,10
000422 940e 0d12 	CALL SUBOPT_0x14
000424 15e0      	CP   R30,R0
000425 05f1      	CPC  R31,R1
000426 f009      	BREQ _0x61
                 _0x60:
000427 c01b      	RJMP _0x5F
                 _0x61:
                 ; 0000 016F    {
                 ; 0000 0170         if(t[0][2]!= 2)
000428 940e 0d3f 	CALL SUBOPT_0x1B
00042a 30e2      	CPI  R30,LOW(0x2)
00042b e0a0      	LDI  R26,HIGH(0x2)
00042c 07fa      	CPC  R31,R26
00042d f0a9      	BREQ _0x62
                 ; 0000 0171         {
                 ; 0000 0172             draw_winner_line(55,8,55,55);
00042e 940e 0d1d 	CALL SUBOPT_0x16
000430 940e 0d18 	CALL SUBOPT_0x15
000432 940e 0d1d 	CALL SUBOPT_0x16
000434 940e 0d22 	CALL SUBOPT_0x17
                 ; 0000 0173             delay_ms(500);
                 ; 0000 0174             glcd_clear();
                 ; 0000 0175             if(turn==0){
000436 f429      	BRNE _0x63
                 ; 0000 0176             glcd_outtextxyf(50,32,"O wins!");
000437 940e 0cee 	CALL SUBOPT_0xD
000439 940e 0d2f 	CALL SUBOPT_0x18
                 ; 0000 0177             scores('O');
00043b c004      	RJMP _0xBA
                 ; 0000 0178             delay_ms(500);
                 ; 0000 0179             //reset();
                 ; 0000 017A             }
                 ; 0000 017B             else{
                 _0x63:
                 ; 0000 017C             glcd_outtextxyf(50,32,"X win");
00043c 940e 0cee 	CALL SUBOPT_0xD
00043e 940e 0d35 	CALL SUBOPT_0x19
                 ; 0000 017D             scores('X');
                 _0xBA:
000440 de0b      	RCALL _scores
                 ; 0000 017E             delay_ms(500);
000441 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 017F             //reset();
                 ; 0000 0180             }
                 ; 0000 0181         }
                 ; 0000 0182    }
                 _0x62:
                 ; 0000 0183 
                 ; 0000 0184 
                 ; 0000 0185    if(t[0][2]==t[1][1] && t[1][1]==t[2][0])
                 _0x5F:
000443 81e8      	LD   R30,Y
000444 81f9      	LDD  R31,Y+1
                +
000445 8004     +LDD R0 , Z + 4
000446 8015     +LDD R1 , Z + 4 + 1
                 	__GETWRZ 0,1,4
000447 940e 0d0c 	CALL SUBOPT_0x13
000449 15e0      	CP   R30,R0
00044a 05f1      	CPC  R31,R1
00044b f449      	BRNE _0x66
00044c 81e8      	LD   R30,Y
00044d 81f9      	LDD  R31,Y+1
                +
00044e 8400     +LDD R0 , Z + 8
00044f 8411     +LDD R1 , Z + 8 + 1
                 	__GETWRZ 0,1,8
000450 940e 0d4b 	CALL SUBOPT_0x1D
000452 15e0      	CP   R30,R0
000453 05f1      	CPC  R31,R1
000454 f009      	BREQ _0x67
                 _0x66:
000455 c01b      	RJMP _0x65
                 _0x67:
                 ; 0000 0186    {
                 ; 0000 0187 
                 ; 0000 0188         if(t[0][2]!= 2)
000456 940e 0d3f 	CALL SUBOPT_0x1B
000458 30e2      	CPI  R30,LOW(0x2)
000459 e0a0      	LDI  R26,HIGH(0x2)
00045a 07fa      	CPC  R31,R26
00045b f0a9      	BREQ _0x68
                 ; 0000 0189         {
                 ; 0000 018A             draw_winner_line(55,8,8,55);
00045c 940e 0d1d 	CALL SUBOPT_0x16
00045e 940e 0d18 	CALL SUBOPT_0x15
000460 940e 0d18 	CALL SUBOPT_0x15
000462 940e 0d22 	CALL SUBOPT_0x17
                 ; 0000 018B             delay_ms(500);
                 ; 0000 018C             glcd_clear();
                 ; 0000 018D             if(turn==0){
000464 f429      	BRNE _0x69
                 ; 0000 018E             glcd_outtextxyf(50,32,"O wins!");
000465 940e 0cee 	CALL SUBOPT_0xD
000467 940e 0d2f 	CALL SUBOPT_0x18
                 ; 0000 018F             scores('O');
000469 c004      	RJMP _0xBB
                 ; 0000 0190             delay_ms(500);
                 ; 0000 0191             //reset();
                 ; 0000 0192             }
                 ; 0000 0193             else{
                 _0x69:
                 ; 0000 0194             glcd_outtextxyf(50,32,"X win");
00046a 940e 0cee 	CALL SUBOPT_0xD
00046c 940e 0d35 	CALL SUBOPT_0x19
                 ; 0000 0195             scores('X');
                 _0xBB:
00046e dddd      	RCALL _scores
                 ; 0000 0196             delay_ms(500);
00046f 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 0197             //reset();
                 ; 0000 0198             }
                 ; 0000 0199         }
                 ; 0000 019A    }
                 _0x68:
                 ; 0000 019B }
                 _0x65:
000471 9622      	ADIW R28,2
000472 9508      	RET
                 ; .FEND
                 ;
                 ;void newInput(int table[3][3],int i1, int i2 ){
                 ; 0000 019D void newInput(int table[3][3],int i1, int i2 ){
                 _newInput:
                 ; .FSTART _newInput
                 ; 0000 019E     if(i1 != 255 ){
000473 93ba      	ST   -Y,R27
000474 93aa      	ST   -Y,R26
                 ;	table -> Y+4
                 ;	i1 -> Y+2
                 ;	i2 -> Y+0
000475 81aa      	LDD  R26,Y+2
000476 81bb      	LDD  R27,Y+2+1
000477 3faf      	CPI  R26,LOW(0xFF)
000478 e0e0      	LDI  R30,HIGH(0xFF)
000479 07be      	CPC  R27,R30
00047a f409      	BRNE PC+2
00047b c16d      	RJMP _0x6B
                 ; 0000 019F         if(i1 == 254) // Button 0,0
00047c 3fae      	CPI  R26,LOW(0xFE)
00047d e0e0      	LDI  R30,HIGH(0xFE)
00047e 07be      	CPC  R27,R30
00047f f539      	BRNE _0x6C
                 ; 0000 01A0         {
                 ; 0000 01A1             if(table[0][0]== 2)
000480 81ac      	LDD  R26,Y+4
000481 81bd      	LDD  R27,Y+4+1
000482 940e 0d68 	CALL SUBOPT_0x22
000484 f511      	BRNE _0x6D
                 ; 0000 01A2             {
                 ; 0000 01A3              table[0][0] = turn;
000485 81ac      	LDD  R26,Y+4
000486 81bd      	LDD  R27,Y+4+1
000487 924d      	ST   X+,R4
000488 925c      	ST   X,R5
                 ; 0000 01A4 
                 ; 0000 01A5              if(turn==0){
000489 2c04      	MOV  R0,R4
00048a 2805      	OR   R0,R5
00048b f431      	BRNE _0x6E
                 ; 0000 01A6                 glcd_outtextxyf(10,10,"X");//write input
00048c e0ea      	LDI  R30,LOW(10)
00048d 940e 0d6e 	CALL SUBOPT_0x23
                 ; 0000 01A7                 glcd_outtextxyf(110,20,"O");// write turn
                +
00048f e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
000490 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
000491 c005      	RJMP _0xBC
                 ; 0000 01A8 
                 ; 0000 01A9                 delay_ms(500);
                 ; 0000 01AA              }
                 ; 0000 01AB              else{
                 _0x6E:
                 ; 0000 01AC                 glcd_outtextxyf(10,10,"O");//write input
000492 e0ea      	LDI  R30,LOW(10)
000493 940e 0d76 	CALL SUBOPT_0x24
                 ; 0000 01AD                 glcd_outtextxyf(110,20,"X");// write turn
                +
000495 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
000496 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
                 _0xBC:
000497 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 01AE                 delay_ms(500);
000499 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 01AF              }
                 ; 0000 01B0              if(turn==0){
00049b 2c04      	MOV  R0,R4
00049c 2805      	OR   R0,R5
00049d f421      	BRNE _0x70
                 ; 0000 01B1                 turn = 1;
00049e e0e1      	LDI  R30,LOW(1)
00049f e0f0      	LDI  R31,HIGH(1)
0004a0 012f      	MOVW R4,R30
                 ; 0000 01B2              }
                 ; 0000 01B3              else{
0004a1 c002      	RJMP _0x71
                 _0x70:
                 ; 0000 01B4                 turn = 0;
0004a2 2444      	CLR  R4
0004a3 2455      	CLR  R5
                 ; 0000 01B5              }
                 _0x71:
                 ; 0000 01B6              c_end += 1;
0004a4 01f3      	MOVW R30,R6
0004a5 9631      	ADIW R30,1
0004a6 013f      	MOVW R6,R30
                 ; 0000 01B7             }
                 ; 0000 01B8         }     // end Button
                 _0x6D:
                 ; 0000 01B9 
                 ; 0000 01BA         if(i1 == 253) // Button 0,1
                 _0x6C:
0004a7 81aa      	LDD  R26,Y+2
0004a8 81bb      	LDD  R27,Y+2+1
0004a9 3fad      	CPI  R26,LOW(0xFD)
0004aa e0e0      	LDI  R30,HIGH(0xFD)
0004ab 07be      	CPC  R27,R30
0004ac f541      	BRNE _0x72
                 ; 0000 01BB         {
                 ; 0000 01BC             if(table[0][1]== 2)
0004ad 81ac      	LDD  R26,Y+4
0004ae 81bd      	LDD  R27,Y+4+1
0004af 9612      	ADIW R26,2
0004b0 940e 0d68 	CALL SUBOPT_0x22
0004b2 f511      	BRNE _0x73
                 ; 0000 01BD             {
                 ; 0000 01BE              table[0][1] = turn;
0004b3 81ec      	LDD  R30,Y+4
0004b4 81fd      	LDD  R31,Y+4+1
                +
0004b5 8242     +STD Z + 2 , R4
0004b6 8253     +STD Z + 2 + 1 , R5
                 	__PUTWZR 4,5,2
                 ; 0000 01BF 
                 ; 0000 01C0              if(turn==0){
0004b7 2c04      	MOV  R0,R4
0004b8 2805      	OR   R0,R5
0004b9 f431      	BRNE _0x74
                 ; 0000 01C1                 glcd_outtextxyf(31,10,"X");
0004ba e1ef      	LDI  R30,LOW(31)
0004bb 940e 0d6e 	CALL SUBOPT_0x23
                 ; 0000 01C2                 glcd_outtextxyf(110,20,"O");// write turn
                +
0004bd e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
0004be e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
0004bf c005      	RJMP _0xBD
                 ; 0000 01C3 
                 ; 0000 01C4                 delay_ms(500);
                 ; 0000 01C5              }
                 ; 0000 01C6              else{
                 _0x74:
                 ; 0000 01C7                 glcd_outtextxyf(31,10,"O");
0004c0 e1ef      	LDI  R30,LOW(31)
0004c1 940e 0d76 	CALL SUBOPT_0x24
                 ; 0000 01C8                 glcd_outtextxyf(110,20,"X");// write turn
                +
0004c3 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
0004c4 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
                 _0xBD:
0004c5 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 01C9                 delay_ms(500);
0004c7 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 01CA              }
                 ; 0000 01CB              if(turn==0){
0004c9 2c04      	MOV  R0,R4
0004ca 2805      	OR   R0,R5
0004cb f421      	BRNE _0x76
                 ; 0000 01CC                 turn = 1;
0004cc e0e1      	LDI  R30,LOW(1)
0004cd e0f0      	LDI  R31,HIGH(1)
0004ce 012f      	MOVW R4,R30
                 ; 0000 01CD              }
                 ; 0000 01CE              else{
0004cf c002      	RJMP _0x77
                 _0x76:
                 ; 0000 01CF                 turn = 0;
0004d0 2444      	CLR  R4
0004d1 2455      	CLR  R5
                 ; 0000 01D0              }
                 _0x77:
                 ; 0000 01D1              c_end += 1;
0004d2 01f3      	MOVW R30,R6
0004d3 9631      	ADIW R30,1
0004d4 013f      	MOVW R6,R30
                 ; 0000 01D2             }
                 ; 0000 01D3         }     // end Button
                 _0x73:
                 ; 0000 01D4 
                 ; 0000 01D5 
                 ; 0000 01D6         if(i1 == 251) // Button 0,2
                 _0x72:
0004d5 81aa      	LDD  R26,Y+2
0004d6 81bb      	LDD  R27,Y+2+1
0004d7 3fab      	CPI  R26,LOW(0xFB)
0004d8 e0e0      	LDI  R30,HIGH(0xFB)
0004d9 07be      	CPC  R27,R30
0004da f541      	BRNE _0x78
                 ; 0000 01D7         {
                 ; 0000 01D8             if(table[0][2]== 2)
0004db 81ac      	LDD  R26,Y+4
0004dc 81bd      	LDD  R27,Y+4+1
0004dd 9614      	ADIW R26,4
0004de 940e 0d68 	CALL SUBOPT_0x22
0004e0 f511      	BRNE _0x79
                 ; 0000 01D9             {
                 ; 0000 01DA              table[0][2] = turn;
0004e1 81ec      	LDD  R30,Y+4
0004e2 81fd      	LDD  R31,Y+4+1
                +
0004e3 8244     +STD Z + 4 , R4
0004e4 8255     +STD Z + 4 + 1 , R5
                 	__PUTWZR 4,5,4
                 ; 0000 01DB 
                 ; 0000 01DC              if(turn==0){
0004e5 2c04      	MOV  R0,R4
0004e6 2805      	OR   R0,R5
0004e7 f431      	BRNE _0x7A
                 ; 0000 01DD                 glcd_outtextxyf(52,10,"X");
0004e8 e3e4      	LDI  R30,LOW(52)
0004e9 940e 0d6e 	CALL SUBOPT_0x23
                 ; 0000 01DE                 glcd_outtextxyf(110,20,"O");// write turn
                +
0004eb e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
0004ec e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
0004ed c005      	RJMP _0xBE
                 ; 0000 01DF 
                 ; 0000 01E0                 delay_ms(500);
                 ; 0000 01E1              }
                 ; 0000 01E2              else{
                 _0x7A:
                 ; 0000 01E3                 glcd_outtextxyf(52,10,"O");
0004ee e3e4      	LDI  R30,LOW(52)
0004ef 940e 0d76 	CALL SUBOPT_0x24
                 ; 0000 01E4                 glcd_outtextxyf(110,20,"X");// write turn
                +
0004f1 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
0004f2 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
                 _0xBE:
0004f3 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 01E5                 delay_ms(500);
0004f5 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 01E6              }
                 ; 0000 01E7              if(turn==0){
0004f7 2c04      	MOV  R0,R4
0004f8 2805      	OR   R0,R5
0004f9 f421      	BRNE _0x7C
                 ; 0000 01E8                 turn = 1;
0004fa e0e1      	LDI  R30,LOW(1)
0004fb e0f0      	LDI  R31,HIGH(1)
0004fc 012f      	MOVW R4,R30
                 ; 0000 01E9              }
                 ; 0000 01EA              else{
0004fd c002      	RJMP _0x7D
                 _0x7C:
                 ; 0000 01EB                 turn = 0;
0004fe 2444      	CLR  R4
0004ff 2455      	CLR  R5
                 ; 0000 01EC              }
                 _0x7D:
                 ; 0000 01ED              c_end += 1;
000500 01f3      	MOVW R30,R6
000501 9631      	ADIW R30,1
000502 013f      	MOVW R6,R30
                 ; 0000 01EE             }
                 ; 0000 01EF         }     // end Button
                 _0x79:
                 ; 0000 01F0 
                 ; 0000 01F1 
                 ; 0000 01F2         if(i1 == 247) // Button 1,0
                 _0x78:
000503 81aa      	LDD  R26,Y+2
000504 81bb      	LDD  R27,Y+2+1
000505 3fa7      	CPI  R26,LOW(0xF7)
000506 e0e0      	LDI  R30,HIGH(0xF7)
000507 07be      	CPC  R27,R30
000508 f541      	BRNE _0x7E
                 ; 0000 01F3         {
                 ; 0000 01F4             if(table[1][0]== 2)
000509 81ac      	LDD  R26,Y+4
00050a 81bd      	LDD  R27,Y+4+1
00050b 9616      	ADIW R26,6
00050c 940e 0d68 	CALL SUBOPT_0x22
00050e f511      	BRNE _0x7F
                 ; 0000 01F5             {
                 ; 0000 01F6              table[1][0] = turn;
00050f 81ec      	LDD  R30,Y+4
000510 81fd      	LDD  R31,Y+4+1
                +
000511 8246     +STD Z + 6 , R4
000512 8257     +STD Z + 6 + 1 , R5
                 	__PUTWZR 4,5,6
                 ; 0000 01F7 
                 ; 0000 01F8              if(turn==0){
000513 2c04      	MOV  R0,R4
000514 2805      	OR   R0,R5
000515 f431      	BRNE _0x80
                 ; 0000 01F9                 glcd_outtextxyf(10,32,"X");
000516 e0ea      	LDI  R30,LOW(10)
000517 940e 0d7e 	CALL SUBOPT_0x25
                 ; 0000 01FA                 glcd_outtextxyf(110,20,"O");// write turn
                +
000519 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
00051a e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
00051b c005      	RJMP _0xBF
                 ; 0000 01FB 
                 ; 0000 01FC                 delay_ms(500);
                 ; 0000 01FD              }
                 ; 0000 01FE              else{
                 _0x80:
                 ; 0000 01FF                 glcd_outtextxyf(10,32,"O");
00051c e0ea      	LDI  R30,LOW(10)
00051d 940e 0d86 	CALL SUBOPT_0x26
                 ; 0000 0200                 glcd_outtextxyf(110,20,"X");// write turn
                +
00051f e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
000520 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
                 _0xBF:
000521 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 0201                 delay_ms(500);
000523 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 0202              }
                 ; 0000 0203              if(turn==0){
000525 2c04      	MOV  R0,R4
000526 2805      	OR   R0,R5
000527 f421      	BRNE _0x82
                 ; 0000 0204                 turn = 1;
000528 e0e1      	LDI  R30,LOW(1)
000529 e0f0      	LDI  R31,HIGH(1)
00052a 012f      	MOVW R4,R30
                 ; 0000 0205              }
                 ; 0000 0206              else{
00052b c002      	RJMP _0x83
                 _0x82:
                 ; 0000 0207                 turn = 0;
00052c 2444      	CLR  R4
00052d 2455      	CLR  R5
                 ; 0000 0208              }
                 _0x83:
                 ; 0000 0209              c_end += 1;
00052e 01f3      	MOVW R30,R6
00052f 9631      	ADIW R30,1
000530 013f      	MOVW R6,R30
                 ; 0000 020A             }
                 ; 0000 020B         }     // end Button
                 _0x7F:
                 ; 0000 020C 
                 ; 0000 020D 
                 ; 0000 020E 
                 ; 0000 020F         if(i1 == 239) // Button 1,1
                 _0x7E:
000531 81aa      	LDD  R26,Y+2
000532 81bb      	LDD  R27,Y+2+1
000533 3eaf      	CPI  R26,LOW(0xEF)
000534 e0e0      	LDI  R30,HIGH(0xEF)
000535 07be      	CPC  R27,R30
000536 f541      	BRNE _0x84
                 ; 0000 0210         {
                 ; 0000 0211             if(table[1][1]== 2)
000537 81ac      	LDD  R26,Y+4
000538 81bd      	LDD  R27,Y+4+1
000539 9618      	ADIW R26,8
00053a 940e 0d68 	CALL SUBOPT_0x22
00053c f511      	BRNE _0x85
                 ; 0000 0212             {
                 ; 0000 0213              table[1][1] = turn;
00053d 81ec      	LDD  R30,Y+4
00053e 81fd      	LDD  R31,Y+4+1
                +
00053f 8640     +STD Z + 8 , R4
000540 8651     +STD Z + 8 + 1 , R5
                 	__PUTWZR 4,5,8
                 ; 0000 0214 
                 ; 0000 0215              if(turn==0){
000541 2c04      	MOV  R0,R4
000542 2805      	OR   R0,R5
000543 f431      	BRNE _0x86
                 ; 0000 0216                 glcd_outtextxyf(32,32,"X");
000544 e2e0      	LDI  R30,LOW(32)
000545 940e 0d7e 	CALL SUBOPT_0x25
                 ; 0000 0217                 glcd_outtextxyf(110,20,"O");// write turn
                +
000547 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
000548 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
000549 c005      	RJMP _0xC0
                 ; 0000 0218 
                 ; 0000 0219                 delay_ms(500);
                 ; 0000 021A              }
                 ; 0000 021B              else{
                 _0x86:
                 ; 0000 021C                 glcd_outtextxyf(32,32,"O");
00054a e2e0      	LDI  R30,LOW(32)
00054b 940e 0d86 	CALL SUBOPT_0x26
                 ; 0000 021D                 glcd_outtextxyf(110,20,"X");// write turn
                +
00054d e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
00054e e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
                 _0xC0:
00054f 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 021E                 delay_ms(500);
000551 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 021F              }
                 ; 0000 0220              if(turn==0){
000553 2c04      	MOV  R0,R4
000554 2805      	OR   R0,R5
000555 f421      	BRNE _0x88
                 ; 0000 0221                 turn = 1;
000556 e0e1      	LDI  R30,LOW(1)
000557 e0f0      	LDI  R31,HIGH(1)
000558 012f      	MOVW R4,R30
                 ; 0000 0222              }
                 ; 0000 0223              else{
000559 c002      	RJMP _0x89
                 _0x88:
                 ; 0000 0224                 turn = 0;
00055a 2444      	CLR  R4
00055b 2455      	CLR  R5
                 ; 0000 0225              }
                 _0x89:
                 ; 0000 0226              c_end += 1;
00055c 01f3      	MOVW R30,R6
00055d 9631      	ADIW R30,1
00055e 013f      	MOVW R6,R30
                 ; 0000 0227             }
                 ; 0000 0228         }     // end Button
                 _0x85:
                 ; 0000 0229 
                 ; 0000 022A 
                 ; 0000 022B         if(i1 == 223) // Button 1,2
                 _0x84:
00055f 81aa      	LDD  R26,Y+2
000560 81bb      	LDD  R27,Y+2+1
000561 3daf      	CPI  R26,LOW(0xDF)
000562 e0e0      	LDI  R30,HIGH(0xDF)
000563 07be      	CPC  R27,R30
000564 f541      	BRNE _0x8A
                 ; 0000 022C         {
                 ; 0000 022D             if(table[1][2]== 2)
000565 81ac      	LDD  R26,Y+4
000566 81bd      	LDD  R27,Y+4+1
000567 961a      	ADIW R26,10
000568 940e 0d68 	CALL SUBOPT_0x22
00056a f511      	BRNE _0x8B
                 ; 0000 022E             {
                 ; 0000 022F              table[1][2] = turn;
00056b 81ec      	LDD  R30,Y+4
00056c 81fd      	LDD  R31,Y+4+1
                +
00056d 8642     +STD Z + 10 , R4
00056e 8653     +STD Z + 10 + 1 , R5
                 	__PUTWZR 4,5,10
                 ; 0000 0230 
                 ; 0000 0231              if(turn==0){
00056f 2c04      	MOV  R0,R4
000570 2805      	OR   R0,R5
000571 f431      	BRNE _0x8C
                 ; 0000 0232                 glcd_outtextxyf(53,32,"X");
000572 e3e5      	LDI  R30,LOW(53)
000573 940e 0d7e 	CALL SUBOPT_0x25
                 ; 0000 0233                 glcd_outtextxyf(110,20,"O");// write turn
                +
000575 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
000576 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
000577 c005      	RJMP _0xC1
                 ; 0000 0234 
                 ; 0000 0235                 delay_ms(500);
                 ; 0000 0236              }
                 ; 0000 0237              else{
                 _0x8C:
                 ; 0000 0238                 glcd_outtextxyf(53,32,"O");
000578 e3e5      	LDI  R30,LOW(53)
000579 940e 0d86 	CALL SUBOPT_0x26
                 ; 0000 0239                 glcd_outtextxyf(110,20,"X");// write turn
                +
00057b e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
00057c e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
                 _0xC1:
00057d 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 023A                 delay_ms(500);
00057f 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 023B              }
                 ; 0000 023C              if(turn==0){
000581 2c04      	MOV  R0,R4
000582 2805      	OR   R0,R5
000583 f421      	BRNE _0x8E
                 ; 0000 023D                 turn = 1;
000584 e0e1      	LDI  R30,LOW(1)
000585 e0f0      	LDI  R31,HIGH(1)
000586 012f      	MOVW R4,R30
                 ; 0000 023E              }
                 ; 0000 023F              else{
000587 c002      	RJMP _0x8F
                 _0x8E:
                 ; 0000 0240                 turn = 0;
000588 2444      	CLR  R4
000589 2455      	CLR  R5
                 ; 0000 0241              }
                 _0x8F:
                 ; 0000 0242              c_end += 1;
00058a 01f3      	MOVW R30,R6
00058b 9631      	ADIW R30,1
00058c 013f      	MOVW R6,R30
                 ; 0000 0243             }
                 ; 0000 0244         }     // end Button
                 _0x8B:
                 ; 0000 0245 
                 ; 0000 0246 
                 ; 0000 0247 
                 ; 0000 0248         if(i1 == 191) // Button 2,0
                 _0x8A:
00058d 81aa      	LDD  R26,Y+2
00058e 81bb      	LDD  R27,Y+2+1
00058f 3baf      	CPI  R26,LOW(0xBF)
000590 e0e0      	LDI  R30,HIGH(0xBF)
000591 07be      	CPC  R27,R30
000592 f541      	BRNE _0x90
                 ; 0000 0249         {
                 ; 0000 024A             if(table[2][0]== 2)
000593 81ac      	LDD  R26,Y+4
000594 81bd      	LDD  R27,Y+4+1
000595 961c      	ADIW R26,12
000596 940e 0d68 	CALL SUBOPT_0x22
000598 f511      	BRNE _0x91
                 ; 0000 024B             {
                 ; 0000 024C              table[2][0] = turn;
000599 81ec      	LDD  R30,Y+4
00059a 81fd      	LDD  R31,Y+4+1
                +
00059b 8644     +STD Z + 12 , R4
00059c 8655     +STD Z + 12 + 1 , R5
                 	__PUTWZR 4,5,12
                 ; 0000 024D 
                 ; 0000 024E              if(turn==0){
00059d 2c04      	MOV  R0,R4
00059e 2805      	OR   R0,R5
00059f f431      	BRNE _0x92
                 ; 0000 024F                 glcd_outtextxyf(10,52,"X");
0005a0 e0ea      	LDI  R30,LOW(10)
0005a1 940e 0d8e 	CALL SUBOPT_0x27
                 ; 0000 0250                 glcd_outtextxyf(110,20,"O");// write turn
                +
0005a3 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
0005a4 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
0005a5 c005      	RJMP _0xC2
                 ; 0000 0251 
                 ; 0000 0252                 delay_ms(500);
                 ; 0000 0253              }
                 ; 0000 0254              else{
                 _0x92:
                 ; 0000 0255                 glcd_outtextxyf(10,52,"O");
0005a6 e0ea      	LDI  R30,LOW(10)
0005a7 940e 0d96 	CALL SUBOPT_0x28
                 ; 0000 0256                 glcd_outtextxyf(110,20,"X");// write turn
                +
0005a9 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
0005aa e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
                 _0xC2:
0005ab 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 0257                 delay_ms(500);
0005ad 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 0258              }
                 ; 0000 0259              if(turn==0){
0005af 2c04      	MOV  R0,R4
0005b0 2805      	OR   R0,R5
0005b1 f421      	BRNE _0x94
                 ; 0000 025A                 turn = 1;
0005b2 e0e1      	LDI  R30,LOW(1)
0005b3 e0f0      	LDI  R31,HIGH(1)
0005b4 012f      	MOVW R4,R30
                 ; 0000 025B              }
                 ; 0000 025C              else{
0005b5 c002      	RJMP _0x95
                 _0x94:
                 ; 0000 025D                 turn = 0;
0005b6 2444      	CLR  R4
0005b7 2455      	CLR  R5
                 ; 0000 025E              }
                 _0x95:
                 ; 0000 025F              c_end += 1;
0005b8 01f3      	MOVW R30,R6
0005b9 9631      	ADIW R30,1
0005ba 013f      	MOVW R6,R30
                 ; 0000 0260             }
                 ; 0000 0261         }     // end Button
                 _0x91:
                 ; 0000 0262 
                 ; 0000 0263 
                 ; 0000 0264 
                 ; 0000 0265         if(i1 == 127) // Button 2,1
                 _0x90:
0005bb 81aa      	LDD  R26,Y+2
0005bc 81bb      	LDD  R27,Y+2+1
0005bd 37af      	CPI  R26,LOW(0x7F)
0005be e0e0      	LDI  R30,HIGH(0x7F)
0005bf 07be      	CPC  R27,R30
0005c0 f541      	BRNE _0x96
                 ; 0000 0266         {
                 ; 0000 0267             if(table[2][1]== 2)
0005c1 81ac      	LDD  R26,Y+4
0005c2 81bd      	LDD  R27,Y+4+1
0005c3 961e      	ADIW R26,14
0005c4 940e 0d68 	CALL SUBOPT_0x22
0005c6 f511      	BRNE _0x97
                 ; 0000 0268             {
                 ; 0000 0269              table[2][1] = turn;
0005c7 81ec      	LDD  R30,Y+4
0005c8 81fd      	LDD  R31,Y+4+1
                +
0005c9 8646     +STD Z + 14 , R4
0005ca 8657     +STD Z + 14 + 1 , R5
                 	__PUTWZR 4,5,14
                 ; 0000 026A 
                 ; 0000 026B              if(turn==0){
0005cb 2c04      	MOV  R0,R4
0005cc 2805      	OR   R0,R5
0005cd f431      	BRNE _0x98
                 ; 0000 026C                 glcd_outtextxyf(32,52,"X");
0005ce e2e0      	LDI  R30,LOW(32)
0005cf 940e 0d8e 	CALL SUBOPT_0x27
                 ; 0000 026D                 glcd_outtextxyf(110,20,"O");// write turn
                +
0005d1 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
0005d2 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
0005d3 c005      	RJMP _0xC3
                 ; 0000 026E 
                 ; 0000 026F                 delay_ms(500);
                 ; 0000 0270              }
                 ; 0000 0271              else{
                 _0x98:
                 ; 0000 0272                 glcd_outtextxyf(32,52,"O");
0005d4 e2e0      	LDI  R30,LOW(32)
0005d5 940e 0d96 	CALL SUBOPT_0x28
                 ; 0000 0273                 glcd_outtextxyf(110,20,"X");// write turn
                +
0005d7 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
0005d8 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
                 _0xC3:
0005d9 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 0274                 delay_ms(500);
0005db 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 0275              }
                 ; 0000 0276              if(turn==0){
0005dd 2c04      	MOV  R0,R4
0005de 2805      	OR   R0,R5
0005df f421      	BRNE _0x9A
                 ; 0000 0277                 turn = 1;
0005e0 e0e1      	LDI  R30,LOW(1)
0005e1 e0f0      	LDI  R31,HIGH(1)
0005e2 012f      	MOVW R4,R30
                 ; 0000 0278              }
                 ; 0000 0279              else{
0005e3 c002      	RJMP _0x9B
                 _0x9A:
                 ; 0000 027A                 turn = 0;
0005e4 2444      	CLR  R4
0005e5 2455      	CLR  R5
                 ; 0000 027B              }
                 _0x9B:
                 ; 0000 027C              c_end += 1;
0005e6 01f3      	MOVW R30,R6
0005e7 9631      	ADIW R30,1
0005e8 013f      	MOVW R6,R30
                 ; 0000 027D             }
                 ; 0000 027E         }     // end Button
                 _0x97:
                 ; 0000 027F 
                 ; 0000 0280 
                 ; 0000 0281     }   // end of portC
                 _0x96:
                 ; 0000 0282 
                 ; 0000 0283 
                 ; 0000 0284     if(i2 != 255 ){
                 _0x6B:
0005e9 81a8      	LD   R26,Y
0005ea 81b9      	LDD  R27,Y+1
0005eb 3faf      	CPI  R26,LOW(0xFF)
0005ec e0e0      	LDI  R30,HIGH(0xFF)
0005ed 07be      	CPC  R27,R30
0005ee f199      	BREQ _0x9C
                 ; 0000 0285 
                 ; 0000 0286         if(i2 == 254) // Button 2,2
0005ef 3fae      	CPI  R26,LOW(0xFE)
0005f0 e0e0      	LDI  R30,HIGH(0xFE)
0005f1 07be      	CPC  R27,R30
0005f2 f541      	BRNE _0x9D
                 ; 0000 0287         {
                 ; 0000 0288             if(table[2][2]== 2)
0005f3 81ac      	LDD  R26,Y+4
0005f4 81bd      	LDD  R27,Y+4+1
0005f5 9650      	ADIW R26,16
0005f6 940e 0d68 	CALL SUBOPT_0x22
0005f8 f511      	BRNE _0x9E
                 ; 0000 0289             {
                 ; 0000 028A              table[2][2] = turn;
0005f9 81ec      	LDD  R30,Y+4
0005fa 81fd      	LDD  R31,Y+4+1
                +
0005fb 8a40     +STD Z + 16 , R4
0005fc 8a51     +STD Z + 16 + 1 , R5
                 	__PUTWZR 4,5,16
                 ; 0000 028B 
                 ; 0000 028C              if(turn==0){
0005fd 2c04      	MOV  R0,R4
0005fe 2805      	OR   R0,R5
0005ff f431      	BRNE _0x9F
                 ; 0000 028D                 glcd_outtextxyf(52,52,"X");
000600 e3e4      	LDI  R30,LOW(52)
000601 940e 0d8e 	CALL SUBOPT_0x27
                 ; 0000 028E                 glcd_outtextxyf(110,20,"O");// write turn
                +
000603 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
000604 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
000605 c005      	RJMP _0xC4
                 ; 0000 028F 
                 ; 0000 0290                 delay_ms(500);
                 ; 0000 0291              }
                 ; 0000 0292              else{
                 _0x9F:
                 ; 0000 0293                 glcd_outtextxyf(52,52,"O");
000606 e3e4      	LDI  R30,LOW(52)
000607 940e 0d96 	CALL SUBOPT_0x28
                 ; 0000 0294                 glcd_outtextxyf(110,20,"X");// write turn
                +
000609 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
00060a e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
                 _0xC4:
00060b 940e 0ab4 	CALL _glcd_outtextxyf
                 ; 0000 0295                 delay_ms(500);
00060d 940e 0d3b 	CALL SUBOPT_0x1A
                 ; 0000 0296              }
                 ; 0000 0297              if(turn==0){
00060f 2c04      	MOV  R0,R4
000610 2805      	OR   R0,R5
000611 f421      	BRNE _0xA1
                 ; 0000 0298                 turn = 1;
000612 e0e1      	LDI  R30,LOW(1)
000613 e0f0      	LDI  R31,HIGH(1)
000614 012f      	MOVW R4,R30
                 ; 0000 0299              }
                 ; 0000 029A              else{
000615 c002      	RJMP _0xA2
                 _0xA1:
                 ; 0000 029B                 turn = 0;
000616 2444      	CLR  R4
000617 2455      	CLR  R5
                 ; 0000 029C              }
                 _0xA2:
                 ; 0000 029D              c_end += 1;
000618 01f3      	MOVW R30,R6
000619 9631      	ADIW R30,1
00061a 013f      	MOVW R6,R30
                 ; 0000 029E             }
                 ; 0000 029F         }     // end Button
                 _0x9E:
                 ; 0000 02A0 
                 ; 0000 02A1 
                 ; 0000 02A2         if(i2 == 253) // Button reset
                 _0x9D:
00061b 81a8      	LD   R26,Y
00061c 81b9      	LDD  R27,Y+1
00061d 3fad      	CPI  R26,LOW(0xFD)
00061e e0e0      	LDI  R30,HIGH(0xFD)
00061f 07be      	CPC  R27,R30
000620 f409      	BRNE _0xA3
                 ; 0000 02A3         {
                 ; 0000 02A4             reset();
000621 db7f      	RCALL _reset
                 ; 0000 02A5         }     // end Button
                 ; 0000 02A6     }
                 _0xA3:
                 ; 0000 02A7     check_win(table);
                 _0x9C:
000622 81ac      	LDD  R26,Y+4
000623 81bd      	LDD  R27,Y+4+1
000624 dcc7      	RCALL _check_win
                 ; 0000 02A8 }
000625 c19c      	RJMP _0x2100009
                 ; .FEND
                 ;
                 ;void main(void)
                 ; 0000 02AB {
                 _main:
                 ; .FSTART _main
                 ; 0000 02AC 
                 ; 0000 02AD int input1,input2;
                 ; 0000 02AE 
                 ; 0000 02AF 
                 ; 0000 02B0 config_LCD();
                 ;	input1 -> R16,R17
                 ;	input2 -> R18,R19
000626 db67      	RCALL _config_LCD
                 ; 0000 02B1 config_Ports();
000627 db70      	RCALL _config_Ports
                 ; 0000 02B2 
                 ; 0000 02B3 while (1)
                 _0xA4:
                 ; 0000 02B4     {
                 ; 0000 02B5     round = -1;
000628 efef      	LDI  R30,LOW(65535)
000629 efff      	LDI  R31,HIGH(65535)
00062a 016f      	MOVW R12,R30
                 ; 0000 02B6     reset();
00062b db75      	RCALL _reset
                 ; 0000 02B7 
                 ; 0000 02B8     while(c_end<= 9){
                 _0xA7:
00062c e0e9      	LDI  R30,LOW(9)
00062d e0f0      	LDI  R31,HIGH(9)
00062e 15e6      	CP   R30,R6
00062f 05f7      	CPC  R31,R7
000630 f10c      	BRLT _0xA9
                 ; 0000 02B9 
                 ; 0000 02BA         input1 = PINC;
000631 b303      	IN   R16,19
000632 2711      	CLR  R17
                 ; 0000 02BB         input2 = PIND;
000633 b320      	IN   R18,16
000634 2733      	CLR  R19
                 ; 0000 02BC 
                 ; 0000 02BD         if(input1!=255 || input2 !=255){
000635 efef      	LDI  R30,LOW(255)
000636 e0f0      	LDI  R31,HIGH(255)
000637 17e0      	CP   R30,R16
000638 07f1      	CPC  R31,R17
000639 f419      	BRNE _0xAB
00063a 17e2      	CP   R30,R18
00063b 07f3      	CPC  R31,R19
00063c f041      	BREQ _0xAA
                 _0xAB:
                 ; 0000 02BE             newInput(table,input1 , input2 );
00063d e7ed      	LDI  R30,LOW(_table)
00063e e0f2      	LDI  R31,HIGH(_table)
00063f 93fa      	ST   -Y,R31
000640 93ea      	ST   -Y,R30
000641 931a      	ST   -Y,R17
000642 930a      	ST   -Y,R16
000643 01d9      	MOVW R26,R18
000644 de2e      	RCALL _newInput
                 ; 0000 02BF         }
                 ; 0000 02C0 
                 ; 0000 02C1         if(c_end == 9)
                 _0xAA:
000645 e0e9      	LDI  R30,LOW(9)
000646 e0f0      	LDI  R31,HIGH(9)
000647 15e6      	CP   R30,R6
000648 05f7      	CPC  R31,R7
000649 f439      	BRNE _0xAD
                 ; 0000 02C2         {
                 ; 0000 02C3             glcd_clear();
00064a d0f1      	RCALL _glcd_clear
                 ; 0000 02C4             //glcd_outtextxyf(10,32,"!!! PLAY AGAIN !!!");
                 ; 0000 02C5             scores('');
00064b e0a0      	LDI  R26,LOW(0)
00064c dbff      	RCALL _scores
                 ; 0000 02C6             delay_ms(1000);
00064d eea8      	LDI  R26,LOW(1000)
00064e e0b3      	LDI  R27,HIGH(1000)
00064f 940e 0e32 	CALL _delay_ms
                 ; 0000 02C7 
                 ; 0000 02C8         }
                 ; 0000 02C9 }
                 _0xAD:
000651 cfda      	RJMP _0xA7
                 _0xA9:
                 ; 0000 02CA }
000652 cfd5      	RJMP _0xA4
                 ; 0000 02CB }
                 _0xAE:
000653 cfff      	RJMP _0xAE
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _ks0108_enable_G100:
                 ; .FSTART _ks0108_enable_G100
000654 0000      	nop
000655 9ac0      	SBI  0x18,0
000656 0000      	nop
000657 9508      	RET
                 ; .FEND
                 _ks0108_disable_G100:
                 ; .FSTART _ks0108_disable_G100
000658 98c0      	CBI  0x18,0
000659 98c4      	CBI  0x18,4
00065a 98c5      	CBI  0x18,5
00065b 9508      	RET
                 ; .FEND
                 _ks0108_rdbus_G100:
                 ; .FSTART _ks0108_rdbus_G100
00065c 931a      	ST   -Y,R17
00065d dff6      	RCALL _ks0108_enable_G100
00065e b319      	IN   R17,25
00065f 98c0      	CBI  0x18,0
000660 2fe1      	MOV  R30,R17
000661 9119      	LD   R17,Y+
000662 9508      	RET
                 ; .FEND
                 _ks0108_busy_G100:
                 ; .FSTART _ks0108_busy_G100
000663 93aa      	ST   -Y,R26
000664 931a      	ST   -Y,R17
000665 e0e0      	LDI  R30,LOW(0)
000666 bbea      	OUT  0x1A,R30
000667 9ac1      	SBI  0x18,1
000668 98c2      	CBI  0x18,2
000669 81e9      	LDD  R30,Y+1
00066a 5fef      	SUBI R30,-LOW(1)
00066b 2f1e      	MOV  R17,R30
00066c ff10      	SBRS R17,0
00066d c002      	RJMP _0x2000003
00066e 9ac4      	SBI  0x18,4
00066f c001      	RJMP _0x2000004
                 _0x2000003:
000670 98c4      	CBI  0x18,4
                 _0x2000004:
000671 ff11      	SBRS R17,1
000672 c002      	RJMP _0x2000005
000673 9ac5      	SBI  0x18,5
000674 c001      	RJMP _0x2000006
                 _0x2000005:
000675 98c5      	CBI  0x18,5
                 _0x2000006:
                 _0x2000007:
000676 dfe5      	RCALL _ks0108_rdbus_G100
000677 78e0      	ANDI R30,LOW(0x80)
000678 f7e9      	BRNE _0x2000007
000679 8118      	LDD  R17,Y+0
00067a 940c 0bff 	JMP  _0x2100003
                 ; .FEND
                 _ks0108_wrcmd_G100:
                 ; .FSTART _ks0108_wrcmd_G100
00067c 93aa      	ST   -Y,R26
00067d 81a9      	LDD  R26,Y+1
00067e dfe4      	RCALL _ks0108_busy_G100
00067f 940e 0d9e 	CALL SUBOPT_0x29
000681 940c 0bff 	JMP  _0x2100003
                 ; .FEND
                 _ks0108_setloc_G100:
                 ; .FSTART _ks0108_setloc_G100
                +
000683 91e0 0290+LDS R30 , _ks0108_coord_G100 + ( 1 )
                 	__GETB1MN _ks0108_coord_G100,1
000685 93ea      	ST   -Y,R30
000686 91e0 028f 	LDS  R30,_ks0108_coord_G100
000688 73ef      	ANDI R30,LOW(0x3F)
000689 64e0      	ORI  R30,0x40
00068a 2fae      	MOV  R26,R30
00068b dff0      	RCALL _ks0108_wrcmd_G100
                +
00068c 91e0 0290+LDS R30 , _ks0108_coord_G100 + ( 1 )
                 	__GETB1MN _ks0108_coord_G100,1
00068e 93ea      	ST   -Y,R30
                +
00068f 91e0 0291+LDS R30 , _ks0108_coord_G100 + ( 2 )
                 	__GETB1MN _ks0108_coord_G100,2
000691 6be8      	ORI  R30,LOW(0xB8)
000692 2fae      	MOV  R26,R30
000693 dfe8      	RCALL _ks0108_wrcmd_G100
000694 9508      	RET
                 ; .FEND
                 _ks0108_gotoxp_G100:
                 ; .FSTART _ks0108_gotoxp_G100
000695 93aa      	ST   -Y,R26
000696 81e9      	LDD  R30,Y+1
000697 93e0 028f 	STS  _ks0108_coord_G100,R30
000699 95e2      	SWAP R30
00069a 70ef      	ANDI R30,0xF
00069b 95e6      	LSR  R30
00069c 95e6      	LSR  R30
                +
00069d 93e0 0290+STS _ks0108_coord_G100 + ( 1 ) , R30
                 	__PUTB1MN _ks0108_coord_G100,1
00069f 81e8      	LD   R30,Y
                +
0006a0 93e0 0291+STS _ks0108_coord_G100 + ( 2 ) , R30
                 	__PUTB1MN _ks0108_coord_G100,2
0006a2 dfe0      	RCALL _ks0108_setloc_G100
0006a3 940c 0bff 	JMP  _0x2100003
                 ; .FEND
                 _ks0108_nextx_G100:
                 ; .FSTART _ks0108_nextx_G100
0006a5 91a0 028f 	LDS  R26,_ks0108_coord_G100
0006a7 5faf      	SUBI R26,-LOW(1)
0006a8 93a0 028f 	STS  _ks0108_coord_G100,R26
0006aa 38a0      	CPI  R26,LOW(0x80)
0006ab f018      	BRLO _0x200000A
0006ac e0e0      	LDI  R30,LOW(0)
0006ad 93e0 028f 	STS  _ks0108_coord_G100,R30
                 _0x200000A:
0006af 91e0 028f 	LDS  R30,_ks0108_coord_G100
0006b1 73ef      	ANDI R30,LOW(0x3F)
0006b2 f431      	BRNE _0x200000B
0006b3 91e0 028f 	LDS  R30,_ks0108_coord_G100
0006b5 93ea      	ST   -Y,R30
                +
0006b6 91a0 0291+LDS R26 , _ks0108_coord_G100 + ( 2 )
                 	__GETB2MN _ks0108_coord_G100,2
0006b8 dfdc      	RCALL _ks0108_gotoxp_G100
                 _0x200000B:
0006b9 9508      	RET
                 ; .FEND
                 _ks0108_wrdata_G100:
                 ; .FSTART _ks0108_wrdata_G100
0006ba 93aa      	ST   -Y,R26
                +
0006bb 91a0 0290+LDS R26 , _ks0108_coord_G100 + ( 1 )
                 	__GETB2MN _ks0108_coord_G100,1
0006bd dfa5      	RCALL _ks0108_busy_G100
0006be 9ac2      	SBI  0x18,2
0006bf 940e 0d9e 	CALL SUBOPT_0x29
                 _0x210000A:
0006c1 9621      	ADIW R28,1
0006c2 9508      	RET
                 ; .FEND
                 _ks0108_rddata_G100:
                 ; .FSTART _ks0108_rddata_G100
                +
0006c3 91a0 0290+LDS R26 , _ks0108_coord_G100 + ( 1 )
                 	__GETB2MN _ks0108_coord_G100,1
0006c5 df9d      	RCALL _ks0108_busy_G100
0006c6 e0e0      	LDI  R30,LOW(0)
0006c7 bbea      	OUT  0x1A,R30
0006c8 9ac1      	SBI  0x18,1
0006c9 9ac2      	SBI  0x18,2
0006ca df91      	RCALL _ks0108_rdbus_G100
0006cb 9508      	RET
                 ; .FEND
                 _ks0108_rdbyte_G100:
                 ; .FSTART _ks0108_rdbyte_G100
0006cc 93aa      	ST   -Y,R26
0006cd 81e9      	LDD  R30,Y+1
0006ce 93ea      	ST   -Y,R30
0006cf 81e9      	LDD  R30,Y+1
0006d0 940e 0da7 	CALL SUBOPT_0x2A
0006d2 dff0      	RCALL _ks0108_rddata_G100
0006d3 dfaf      	RCALL _ks0108_setloc_G100
0006d4 dfee      	RCALL _ks0108_rddata_G100
0006d5 940c 0bff 	JMP  _0x2100003
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0006d7 93ba      	ST   -Y,R27
0006d8 93aa      	ST   -Y,R26
0006d9 931a      	ST   -Y,R17
0006da 9ab8      	SBI  0x17,0
0006db 9ab9      	SBI  0x17,1
0006dc 9aba      	SBI  0x17,2
0006dd 9abb      	SBI  0x17,3
0006de 9ac3      	SBI  0x18,3
0006df 9abc      	SBI  0x17,4
0006e0 9abd      	SBI  0x17,5
0006e1 df76      	RCALL _ks0108_disable_G100
0006e2 98c3      	CBI  0x18,3
0006e3 e6a4      	LDI  R26,LOW(100)
0006e4 e0b0      	LDI  R27,0
0006e5 940e 0e32 	CALL _delay_ms
0006e7 9ac3      	SBI  0x18,3
0006e8 e010      	LDI  R17,LOW(0)
                 _0x200000C:
0006e9 3012      	CPI  R17,2
0006ea f440      	BRSH _0x200000E
0006eb 931a      	ST   -Y,R17
0006ec e3af      	LDI  R26,LOW(63)
0006ed df8e      	RCALL _ks0108_wrcmd_G100
0006ee 931a      	ST   -Y,R17
0006ef 9513      	INC  R17
0006f0 eca0      	LDI  R26,LOW(192)
0006f1 df8a      	RCALL _ks0108_wrcmd_G100
0006f2 cff6      	RJMP _0x200000C
                 _0x200000E:
0006f3 e0e1      	LDI  R30,LOW(1)
0006f4 93e0 0260 	STS  _glcd_state,R30
0006f6 e0e0      	LDI  R30,LOW(0)
                +
0006f7 93e0 0261+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
0006f9 81e9      	LDD  R30,Y+1
0006fa 81fa      	LDD  R31,Y+1+1
0006fb 9730      	SBIW R30,0
0006fc f0a9      	BREQ _0x200000F
0006fd 81a9      	LDD  R26,Y+1
0006fe 81ba      	LDD  R27,Y+1+1
0006ff 940e 0e58 	CALL __GETW1P
                +
000701 93e0 0264+STS _glcd_state + ( 4 ) , R30
000703 93f0 0265+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
000705 9612      	ADIW R26,2
000706 940e 0e58 	CALL __GETW1P
                +
000708 93e0 0279+STS _glcd_state + ( 25 ) , R30
00070a 93f0 027a+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
00070c 81a9      	LDD  R26,Y+1
00070d 81ba      	LDD  R27,Y+1+1
00070e 9614      	ADIW R26,4
00070f 940e 0e58 	CALL __GETW1P
000711 c00a      	RJMP _0x20000AC
                 _0x200000F:
000712 e0e0      	LDI  R30,LOW(0)
000713 e0f0      	LDI  R31,HIGH(0)
                +
000714 93e0 0264+STS _glcd_state + ( 4 ) , R30
000716 93f0 0265+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
000718 93e0 0279+STS _glcd_state + ( 25 ) , R30
00071a 93f0 027a+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000AC:
                +
00071c 93e0 027b+STS _glcd_state + ( 27 ) , R30
00071e 93f0 027c+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000720 e0e1      	LDI  R30,LOW(1)
                +
000721 93e0 0266+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000723 93e0 0267+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
000725 93e0 0268+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000727 efef      	LDI  R30,LOW(255)
                +
000728 93e0 0269+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
00072a e0e1      	LDI  R30,LOW(1)
                +
00072b 93e0 0270+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
00072d e7e1     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
00072e e0f2     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
00072f 93fa      	ST   -Y,R31
000730 93ea      	ST   -Y,R30
000731 efef      	LDI  R30,LOW(255)
000732 93ea      	ST   -Y,R30
000733 e0a8      	LDI  R26,LOW(8)
000734 e0b0      	LDI  R27,0
000735 940e 0be6 	CALL _memset
000737 d004      	RCALL _glcd_clear
000738 e0e1      	LDI  R30,LOW(1)
000739 8118      	LDD  R17,Y+0
00073a 940c 0c46 	JMP  _0x2100002
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
00073c 940e 0e7f 	CALL __SAVELOCR4
00073e e000      	LDI  R16,0
00073f e030      	LDI  R19,0
                +
000740 91e0 0261+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000742 30e0      	CPI  R30,0
000743 f009      	BREQ _0x2000015
000744 ef0f      	LDI  R16,LOW(255)
                 _0x2000015:
                 _0x2000016:
000745 3038      	CPI  R19,8
000746 f478      	BRSH _0x2000018
000747 e0e0      	LDI  R30,LOW(0)
000748 93ea      	ST   -Y,R30
000749 2fa3      	MOV  R26,R19
00074a 5f3f      	SUBI R19,-1
00074b df49      	RCALL _ks0108_gotoxp_G100
00074c e010      	LDI  R17,LOW(0)
                 _0x2000019:
00074d 2fa1      	MOV  R26,R17
00074e 5f1f      	SUBI R17,-1
00074f 38a0      	CPI  R26,LOW(0x80)
000750 f420      	BRSH _0x200001B
000751 2fa0      	MOV  R26,R16
000752 940e 0dad 	CALL SUBOPT_0x2B
000754 cff8      	RJMP _0x2000019
                 _0x200001B:
000755 cfef      	RJMP _0x2000016
                 _0x2000018:
000756 e0e0      	LDI  R30,LOW(0)
000757 93ea      	ST   -Y,R30
000758 e0a0      	LDI  R26,LOW(0)
000759 df3b      	RCALL _ks0108_gotoxp_G100
00075a e0e0      	LDI  R30,LOW(0)
00075b 93ea      	ST   -Y,R30
00075c e0a0      	LDI  R26,LOW(0)
00075d d386      	RCALL _glcd_moveto
00075e 940e 0e86 	CALL __LOADLOCR4
000760 940c 0c65 	JMP  _0x2100001
                 ; .FEND
                 _glcd_putpixel:
                 ; .FSTART _glcd_putpixel
000762 93aa      	ST   -Y,R26
000763 931a      	ST   -Y,R17
000764 930a      	ST   -Y,R16
000765 81ac      	LDD  R26,Y+4
000766 38a0      	CPI  R26,LOW(0x80)
000767 f418      	BRSH _0x200001D
000768 81ab      	LDD  R26,Y+3
000769 34a0      	CPI  R26,LOW(0x40)
00076a f020      	BRLO _0x200001C
                 _0x200001D:
00076b 8119      	LDD  R17,Y+1
00076c 8108      	LDD  R16,Y+0
00076d 940c 0bf4 	JMP  _0x2100004
                 _0x200001C:
00076f 81ec      	LDD  R30,Y+4
000770 93ea      	ST   -Y,R30
000771 81ac      	LDD  R26,Y+4
000772 df59      	RCALL _ks0108_rdbyte_G100
000773 2f1e      	MOV  R17,R30
000774 df0e      	RCALL _ks0108_setloc_G100
000775 81eb      	LDD  R30,Y+3
000776 70e7      	ANDI R30,LOW(0x7)
000777 e0a1      	LDI  R26,LOW(1)
000778 940e 0e40 	CALL __LSLB12
00077a 2f0e      	MOV  R16,R30
00077b 81ea      	LDD  R30,Y+2
00077c 30e0      	CPI  R30,0
00077d f011      	BREQ _0x200001F
00077e 2b10      	OR   R17,R16
00077f c003      	RJMP _0x2000020
                 _0x200001F:
000780 2fe0      	MOV  R30,R16
000781 95e0      	COM  R30
000782 231e      	AND  R17,R30
                 _0x2000020:
000783 2fa1      	MOV  R26,R17
000784 df35      	RCALL _ks0108_wrdata_G100
000785 8119      	LDD  R17,Y+1
000786 8108      	LDD  R16,Y+0
000787 940c 0bf4 	JMP  _0x2100004
                 ; .FEND
                 _ks0108_wrmasked_G100:
                 ; .FSTART _ks0108_wrmasked_G100
000789 93aa      	ST   -Y,R26
00078a 931a      	ST   -Y,R17
00078b 81ed      	LDD  R30,Y+5
00078c 93ea      	ST   -Y,R30
00078d 81ad      	LDD  R26,Y+5
00078e df3d      	RCALL _ks0108_rdbyte_G100
00078f 2f1e      	MOV  R17,R30
000790 def2      	RCALL _ks0108_setloc_G100
000791 81e9      	LDD  R30,Y+1
000792 30e7      	CPI  R30,LOW(0x7)
000793 f011      	BREQ _0x200002B
000794 30e8      	CPI  R30,LOW(0x8)
000795 f439      	BRNE _0x200002C
                 _0x200002B:
000796 81eb      	LDD  R30,Y+3
000797 93ea      	ST   -Y,R30
000798 81aa      	LDD  R26,Y+2
000799 940e 0c01 	CALL _glcd_mappixcolor1bit
00079b 83eb      	STD  Y+3,R30
00079c c008      	RJMP _0x200002D
                 _0x200002C:
00079d 30e3      	CPI  R30,LOW(0x3)
00079e f421      	BRNE _0x200002F
00079f 81eb      	LDD  R30,Y+3
0007a0 95e0      	COM  R30
0007a1 83eb      	STD  Y+3,R30
0007a2 c002      	RJMP _0x2000030
                 _0x200002F:
0007a3 30e0      	CPI  R30,0
0007a4 f421      	BRNE _0x2000031
                 _0x2000030:
                 _0x200002D:
0007a5 81ea      	LDD  R30,Y+2
0007a6 95e0      	COM  R30
0007a7 231e      	AND  R17,R30
0007a8 c002      	RJMP _0x2000032
                 _0x2000031:
0007a9 30e2      	CPI  R30,LOW(0x2)
0007aa f429      	BRNE _0x2000033
                 _0x2000032:
0007ab 81ea      	LDD  R30,Y+2
0007ac 81ab      	LDD  R26,Y+3
0007ad 23ea      	AND  R30,R26
0007ae 2b1e      	OR   R17,R30
0007af c00e      	RJMP _0x2000029
                 _0x2000033:
0007b0 30e1      	CPI  R30,LOW(0x1)
0007b1 f429      	BRNE _0x2000034
0007b2 81ea      	LDD  R30,Y+2
0007b3 81ab      	LDD  R26,Y+3
0007b4 23ea      	AND  R30,R26
0007b5 271e      	EOR  R17,R30
0007b6 c007      	RJMP _0x2000029
                 _0x2000034:
0007b7 30e4      	CPI  R30,LOW(0x4)
0007b8 f429      	BRNE _0x2000029
0007b9 81ea      	LDD  R30,Y+2
0007ba 95e0      	COM  R30
0007bb 81ab      	LDD  R26,Y+3
0007bc 2bea      	OR   R30,R26
0007bd 231e      	AND  R17,R30
                 _0x2000029:
0007be 2fa1      	MOV  R26,R17
0007bf 940e 0dad 	CALL SUBOPT_0x2B
0007c1 8118      	LDD  R17,Y+0
                 _0x2100009:
0007c2 9626      	ADIW R28,6
0007c3 9508      	RET
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
0007c4 93aa      	ST   -Y,R26
0007c5 9723      	SBIW R28,3
0007c6 940e 0e7d 	CALL __SAVELOCR6
0007c8 89a8      	LDD  R26,Y+16
0007c9 38a0      	CPI  R26,LOW(0x80)
0007ca f448      	BRSH _0x2000037
0007cb 85af      	LDD  R26,Y+15
0007cc 34a0      	CPI  R26,LOW(0x40)
0007cd f430      	BRSH _0x2000037
0007ce 85ae      	LDD  R26,Y+14
0007cf 30a0      	CPI  R26,LOW(0x0)
0007d0 f019      	BREQ _0x2000037
0007d1 85ad      	LDD  R26,Y+13
0007d2 30a0      	CPI  R26,LOW(0x0)
0007d3 f409      	BRNE _0x2000036
                 _0x2000037:
0007d4 c1c8      	RJMP _0x2100008
                 _0x2000036:
0007d5 85ee      	LDD  R30,Y+14
0007d6 87e8      	STD  Y+8,R30
0007d7 89a8      	LDD  R26,Y+16
0007d8 27bb      	CLR  R27
0007d9 85ee      	LDD  R30,Y+14
0007da e0f0      	LDI  R31,0
0007db 0fae      	ADD  R26,R30
0007dc 1fbf      	ADC  R27,R31
0007dd 38a1      	CPI  R26,LOW(0x81)
0007de e0e0      	LDI  R30,HIGH(0x81)
0007df 07be      	CPC  R27,R30
0007e0 f020      	BRLO _0x2000039
0007e1 89a8      	LDD  R26,Y+16
0007e2 e8e0      	LDI  R30,LOW(128)
0007e3 1bea      	SUB  R30,R26
0007e4 87ee      	STD  Y+14,R30
                 _0x2000039:
0007e5 852d      	LDD  R18,Y+13
0007e6 85af      	LDD  R26,Y+15
0007e7 27bb      	CLR  R27
0007e8 85ed      	LDD  R30,Y+13
0007e9 e0f0      	LDI  R31,0
0007ea 0fae      	ADD  R26,R30
0007eb 1fbf      	ADC  R27,R31
0007ec 34a1      	CPI  R26,LOW(0x41)
0007ed e0e0      	LDI  R30,HIGH(0x41)
0007ee 07be      	CPC  R27,R30
0007ef f020      	BRLO _0x200003A
0007f0 85af      	LDD  R26,Y+15
0007f1 e4e0      	LDI  R30,LOW(64)
0007f2 1bea      	SUB  R30,R26
0007f3 87ed      	STD  Y+13,R30
                 _0x200003A:
0007f4 85a9      	LDD  R26,Y+9
0007f5 30a6      	CPI  R26,LOW(0x6)
0007f6 f009      	BREQ PC+2
0007f7 c05b      	RJMP _0x200003B
0007f8 85ec      	LDD  R30,Y+12
0007f9 30e1      	CPI  R30,LOW(0x1)
0007fa f409      	BRNE _0x200003F
0007fb c1a1      	RJMP _0x2100008
                 _0x200003F:
0007fc 30e3      	CPI  R30,LOW(0x3)
0007fd f439      	BRNE _0x2000042
                +
0007fe 91e0 027b+LDS R30 , _glcd_state + ( 27 )
000800 91f0 027c+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
000802 9730      	SBIW R30,0
000803 f409      	BRNE _0x2000041
000804 c198      	RJMP _0x2100008
                 _0x2000041:
                 _0x2000042:
000805 8508      	LDD  R16,Y+8
000806 85ed      	LDD  R30,Y+13
000807 95e6      	LSR  R30
000808 95e6      	LSR  R30
000809 95e6      	LSR  R30
00080a 2f3e      	MOV  R19,R30
00080b 2fe2      	MOV  R30,R18
00080c 70e7      	ANDI R30,LOW(0x7)
00080d f419      	BRNE _0x2000044
00080e 85ad      	LDD  R26,Y+13
00080f 172a      	CP   R18,R26
000810 f0e9      	BREQ _0x2000043
                 _0x2000044:
000811 2fa0      	MOV  R26,R16
000812 27bb      	CLR  R27
000813 2fe3      	MOV  R30,R19
000814 e0f0      	LDI  R31,0
000815 940e 0e50 	CALL __MULW12U
000817 85aa      	LDD  R26,Y+10
000818 85bb      	LDD  R27,Y+10+1
000819 940e 0db1 	CALL SUBOPT_0x2C
00081b 9526      	LSR  R18
00081c 9526      	LSR  R18
00081d 9526      	LSR  R18
00081e 2f53      	MOV  R21,R19
                 _0x2000046:
00081f 935f      	PUSH R21
000820 5f5f      	SUBI R21,-1
000821 2fe2      	MOV  R30,R18
000822 91af      	POP  R26
000823 17ea      	CP   R30,R26
000824 f048      	BRLO _0x2000048
000825 2f10      	MOV  R17,R16
                 _0x2000049:
000826 2fe1      	MOV  R30,R17
000827 5011      	SUBI R17,1
000828 30e0      	CPI  R30,0
000829 f019      	BREQ _0x200004B
00082a 940e 0db6 	CALL SUBOPT_0x2D
00082c cff9      	RJMP _0x2000049
                 _0x200004B:
00082d cff1      	RJMP _0x2000046
                 _0x2000048:
                 _0x2000043:
00082e 85ae      	LDD  R26,Y+14
00082f 170a      	CP   R16,R26
000830 f111      	BREQ _0x200004C
000831 85ee      	LDD  R30,Y+14
000832 85aa      	LDD  R26,Y+10
000833 85bb      	LDD  R27,Y+10+1
000834 e0f0      	LDI  R31,0
000835 940e 0db1 	CALL SUBOPT_0x2C
000837 85ed      	LDD  R30,Y+13
000838 70e7      	ANDI R30,LOW(0x7)
000839 f009      	BREQ _0x200004D
00083a 5f3f      	SUBI R19,-LOW(1)
                 _0x200004D:
00083b e020      	LDI  R18,LOW(0)
                 _0x200004E:
00083c 932f      	PUSH R18
00083d 5f2f      	SUBI R18,-1
00083e 2fe3      	MOV  R30,R19
00083f 91af      	POP  R26
000840 17ae      	CP   R26,R30
000841 f488      	BRSH _0x2000050
000842 851e      	LDD  R17,Y+14
                 _0x2000051:
000843 931f      	PUSH R17
000844 5f1f      	SUBI R17,-1
000845 2fe0      	MOV  R30,R16
000846 91af      	POP  R26
000847 17ae      	CP   R26,R30
000848 f418      	BRSH _0x2000053
000849 940e 0db6 	CALL SUBOPT_0x2D
00084b cff7      	RJMP _0x2000051
                 _0x2000053:
00084c 85ee      	LDD  R30,Y+14
00084d 81ae      	LDD  R26,Y+6
00084e 81bf      	LDD  R27,Y+6+1
00084f e0f0      	LDI  R31,0
000850 940e 0db1 	CALL SUBOPT_0x2C
000852 cfe9      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004C:
                 _0x200003B:
000853 85ef      	LDD  R30,Y+15
000854 70e7      	ANDI R30,LOW(0x7)
000855 2f3e      	MOV  R19,R30
                 _0x2000054:
000856 85ed      	LDD  R30,Y+13
000857 30e0      	CPI  R30,0
000858 f409      	BRNE PC+2
000859 c143      	RJMP _0x2000056
00085a 85ea      	LDD  R30,Y+10
00085b 85fb      	LDD  R31,Y+10+1
00085c 83ee      	STD  Y+6,R30
00085d 83ff      	STD  Y+6+1,R31
00085e e010      	LDI  R17,LOW(0)
00085f 8908      	LDD  R16,Y+16
000860 3030      	CPI  R19,0
000861 f009      	BREQ PC+2
000862 c065      	RJMP _0x2000057
000863 85ad      	LDD  R26,Y+13
000864 30a8      	CPI  R26,LOW(0x8)
000865 f408      	BRSH PC+2
000866 c05c      	RJMP _0x2000058
000867 85e9      	LDD  R30,Y+9
000868 30e0      	CPI  R30,0
000869 f011      	BREQ _0x200005D
00086a 30e3      	CPI  R30,LOW(0x3)
00086b f409      	BRNE _0x200005E
                 _0x200005D:
00086c c002      	RJMP _0x200005F
                 _0x200005E:
00086d 30e7      	CPI  R30,LOW(0x7)
00086e f409      	BRNE _0x2000060
                 _0x200005F:
00086f c002      	RJMP _0x2000061
                 _0x2000060:
000870 30e8      	CPI  R30,LOW(0x8)
000871 f409      	BRNE _0x2000062
                 _0x2000061:
000872 c002      	RJMP _0x2000063
                 _0x2000062:
000873 30e6      	CPI  R30,LOW(0x6)
000874 f409      	BRNE _0x2000064
                 _0x2000063:
000875 c002      	RJMP _0x2000065
                 _0x2000064:
000876 30e9      	CPI  R30,LOW(0x9)
000877 f409      	BRNE _0x2000066
                 _0x2000065:
000878 c002      	RJMP _0x2000067
                 _0x2000066:
000879 30ea      	CPI  R30,LOW(0xA)
00087a f421      	BRNE _0x200005B
                 _0x2000067:
00087b 930a      	ST   -Y,R16
00087c 89e8      	LDD  R30,Y+16
00087d 940e 0da7 	CALL SUBOPT_0x2A
                 _0x200005B:
                 _0x2000069:
00087f 931f      	PUSH R17
000880 5f1f      	SUBI R17,-1
000881 85ee      	LDD  R30,Y+14
000882 91af      	POP  R26
000883 17ae      	CP   R26,R30
000884 f5b8      	BRSH _0x200006B
000885 85a9      	LDD  R26,Y+9
000886 30a6      	CPI  R26,LOW(0x6)
000887 f461      	BRNE _0x200006C
000888 de3a      	RCALL _ks0108_rddata_G100
000889 ddf9      	RCALL _ks0108_setloc_G100
00088a 940e 0dc3 	CALL SUBOPT_0x2E
00088c 93fa      	ST   -Y,R31
00088d 93ea      	ST   -Y,R30
00088e de34      	RCALL _ks0108_rddata_G100
00088f 2fae      	MOV  R26,R30
000890 940e 0c48 	CALL _glcd_writemem
000892 de12      	RCALL _ks0108_nextx_G100
000893 c027      	RJMP _0x200006D
                 _0x200006C:
000894 85e9      	LDD  R30,Y+9
000895 30e9      	CPI  R30,LOW(0x9)
000896 f411      	BRNE _0x2000071
000897 e050      	LDI  R21,LOW(0)
000898 c00e      	RJMP _0x2000072
                 _0x2000071:
000899 30ea      	CPI  R30,LOW(0xA)
00089a f411      	BRNE _0x2000070
00089b ef5f      	LDI  R21,LOW(255)
00089c c00a      	RJMP _0x2000072
                 _0x2000070:
00089d 940e 0dc3 	CALL SUBOPT_0x2E
00089f 940e 0dcc 	CALL SUBOPT_0x2F
0008a1 2f5e      	MOV  R21,R30
0008a2 85e9      	LDD  R30,Y+9
0008a3 30e7      	CPI  R30,LOW(0x7)
0008a4 f011      	BREQ _0x2000079
0008a5 30e8      	CPI  R30,LOW(0x8)
0008a6 f421      	BRNE _0x200007A
                 _0x2000079:
                 _0x2000072:
0008a7 940e 0dd2 	CALL SUBOPT_0x30
0008a9 2f5e      	MOV  R21,R30
0008aa c006      	RJMP _0x200007B
                 _0x200007A:
0008ab 30e3      	CPI  R30,LOW(0x3)
0008ac f411      	BRNE _0x200007D
0008ad 9550      	COM  R21
0008ae c002      	RJMP _0x200007E
                 _0x200007D:
0008af 30e0      	CPI  R30,0
0008b0 f421      	BRNE _0x2000080
                 _0x200007E:
                 _0x200007B:
0008b1 2fa5      	MOV  R26,R21
0008b2 940e 0dad 	CALL SUBOPT_0x2B
0008b4 c006      	RJMP _0x2000077
                 _0x2000080:
0008b5 940e 0dd6 	CALL SUBOPT_0x31
0008b7 efef      	LDI  R30,LOW(255)
0008b8 93ea      	ST   -Y,R30
0008b9 85ad      	LDD  R26,Y+13
0008ba dece      	RCALL _ks0108_wrmasked_G100
                 _0x2000077:
                 _0x200006D:
0008bb cfc3      	RJMP _0x2000069
                 _0x200006B:
0008bc 85ef      	LDD  R30,Y+15
0008bd 5fe8      	SUBI R30,-LOW(8)
0008be 87ef      	STD  Y+15,R30
0008bf 85ed      	LDD  R30,Y+13
0008c0 50e8      	SUBI R30,LOW(8)
0008c1 87ed      	STD  Y+13,R30
0008c2 c0d1      	RJMP _0x2000081
                 _0x2000058:
0008c3 855d      	LDD  R21,Y+13
0008c4 e020      	LDI  R18,LOW(0)
0008c5 e0e0      	LDI  R30,LOW(0)
0008c6 87ed      	STD  Y+13,R30
0008c7 c07a      	RJMP _0x2000082
                 _0x2000057:
0008c8 2fe3      	MOV  R30,R19
0008c9 85ad      	LDD  R26,Y+13
0008ca 0fae      	ADD  R26,R30
0008cb 30a9      	CPI  R26,LOW(0x9)
0008cc f420      	BRSH _0x2000083
0008cd 852d      	LDD  R18,Y+13
0008ce e0e0      	LDI  R30,LOW(0)
0008cf 87ed      	STD  Y+13,R30
0008d0 c003      	RJMP _0x2000084
                 _0x2000083:
0008d1 e0e8      	LDI  R30,LOW(8)
0008d2 1be3      	SUB  R30,R19
0008d3 2f2e      	MOV  R18,R30
                 _0x2000084:
0008d4 933a      	ST   -Y,R19
0008d5 2fa2      	MOV  R26,R18
0008d6 940e 0bf6 	CALL _glcd_getmask
0008d8 2f4e      	MOV  R20,R30
0008d9 85e9      	LDD  R30,Y+9
0008da 30e6      	CPI  R30,LOW(0x6)
0008db f4f1      	BRNE _0x2000088
                 _0x2000089:
0008dc 931f      	PUSH R17
0008dd 5f1f      	SUBI R17,-1
0008de 85ee      	LDD  R30,Y+14
0008df 91af      	POP  R26
0008e0 17ae      	CP   R26,R30
0008e1 f4b8      	BRSH _0x200008B
0008e2 940e 0ddc 	CALL SUBOPT_0x32
0008e4 2fae      	MOV  R26,R30
0008e5 2fe3      	MOV  R30,R19
0008e6 940e 0e48 	CALL __LSRB12
0008e8 940e 0de3 	CALL SUBOPT_0x33
0008ea 2fe3      	MOV  R30,R19
0008eb 2fa4      	MOV  R26,R20
0008ec 940e 0e48 	CALL __LSRB12
0008ee 95e0      	COM  R30
0008ef 21e1      	AND  R30,R1
0008f0 2b5e      	OR   R21,R30
0008f1 940e 0dc3 	CALL SUBOPT_0x2E
0008f3 93fa      	ST   -Y,R31
0008f4 93ea      	ST   -Y,R30
0008f5 2fa5      	MOV  R26,R21
0008f6 940e 0c48 	CALL _glcd_writemem
0008f8 cfe3      	RJMP _0x2000089
                 _0x200008B:
0008f9 c02c      	RJMP _0x2000087
                 _0x2000088:
0008fa 30e9      	CPI  R30,LOW(0x9)
0008fb f411      	BRNE _0x200008C
0008fc e050      	LDI  R21,LOW(0)
0008fd c003      	RJMP _0x200008D
                 _0x200008C:
0008fe 30ea      	CPI  R30,LOW(0xA)
0008ff f4a9      	BRNE _0x2000093
000900 ef5f      	LDI  R21,LOW(255)
                 _0x200008D:
000901 940e 0dd2 	CALL SUBOPT_0x30
000903 2fae      	MOV  R26,R30
000904 2fe3      	MOV  R30,R19
000905 940e 0e40 	CALL __LSLB12
000907 2f5e      	MOV  R21,R30
                 _0x2000090:
000908 931f      	PUSH R17
000909 5f1f      	SUBI R17,-1
00090a 85ee      	LDD  R30,Y+14
00090b 91af      	POP  R26
00090c 17ae      	CP   R26,R30
00090d f430      	BRSH _0x2000092
00090e 940e 0dd6 	CALL SUBOPT_0x31
000910 934a      	ST   -Y,R20
000911 e0a0      	LDI  R26,LOW(0)
000912 de76      	RCALL _ks0108_wrmasked_G100
000913 cff4      	RJMP _0x2000090
                 _0x2000092:
000914 c011      	RJMP _0x2000087
                 _0x2000093:
                 _0x2000094:
000915 931f      	PUSH R17
000916 5f1f      	SUBI R17,-1
000917 85ee      	LDD  R30,Y+14
000918 91af      	POP  R26
000919 17ae      	CP   R26,R30
00091a f458      	BRSH _0x2000096
00091b 940e 0dee 	CALL SUBOPT_0x34
00091d 2fae      	MOV  R26,R30
00091e 2fe3      	MOV  R30,R19
00091f 940e 0e40 	CALL __LSLB12
000921 93ea      	ST   -Y,R30
000922 934a      	ST   -Y,R20
000923 85ad      	LDD  R26,Y+13
000924 de64      	RCALL _ks0108_wrmasked_G100
000925 cfef      	RJMP _0x2000094
                 _0x2000096:
                 _0x2000087:
000926 85ed      	LDD  R30,Y+13
000927 30e0      	CPI  R30,0
000928 f409      	BRNE _0x2000097
000929 c073      	RJMP _0x2000056
                 _0x2000097:
00092a 85ad      	LDD  R26,Y+13
00092b 30a8      	CPI  R26,LOW(0x8)
00092c f428      	BRSH _0x2000098
00092d 85ed      	LDD  R30,Y+13
00092e 1be2      	SUB  R30,R18
00092f 2f5e      	MOV  R21,R30
000930 e0e0      	LDI  R30,LOW(0)
000931 c003      	RJMP _0x20000AD
                 _0x2000098:
000932 2f53      	MOV  R21,R19
000933 85ed      	LDD  R30,Y+13
000934 50e8      	SUBI R30,LOW(8)
                 _0x20000AD:
000935 87ed      	STD  Y+13,R30
000936 e010      	LDI  R17,LOW(0)
000937 85ef      	LDD  R30,Y+15
000938 5fe8      	SUBI R30,-LOW(8)
000939 87ef      	STD  Y+15,R30
00093a e0e8      	LDI  R30,LOW(8)
00093b 1be3      	SUB  R30,R19
00093c 2f2e      	MOV  R18,R30
00093d 8908      	LDD  R16,Y+16
00093e 85ea      	LDD  R30,Y+10
00093f 85fb      	LDD  R31,Y+10+1
000940 83ee      	STD  Y+6,R30
000941 83ff      	STD  Y+6+1,R31
                 _0x2000082:
000942 2fe5      	MOV  R30,R21
000943 e0f0      	LDI  R31,0
000944 5ce8      	SUBI R30,LOW(-__glcd_mask*2)
000945 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000946 9144      	LPM  R20,Z
000947 85e9      	LDD  R30,Y+9
000948 30e6      	CPI  R30,LOW(0x6)
000949 f4f1      	BRNE _0x200009D
                 _0x200009E:
00094a 931f      	PUSH R17
00094b 5f1f      	SUBI R17,-1
00094c 85ee      	LDD  R30,Y+14
00094d 91af      	POP  R26
00094e 17ae      	CP   R26,R30
00094f f4b8      	BRSH _0x20000A0
000950 940e 0ddc 	CALL SUBOPT_0x32
000952 2fae      	MOV  R26,R30
000953 2fe2      	MOV  R30,R18
000954 940e 0e40 	CALL __LSLB12
000956 940e 0de3 	CALL SUBOPT_0x33
000958 2fe2      	MOV  R30,R18
000959 2fa4      	MOV  R26,R20
00095a 940e 0e40 	CALL __LSLB12
00095c 95e0      	COM  R30
00095d 21e1      	AND  R30,R1
00095e 2b5e      	OR   R21,R30
00095f 940e 0dc3 	CALL SUBOPT_0x2E
000961 93fa      	ST   -Y,R31
000962 93ea      	ST   -Y,R30
000963 2fa5      	MOV  R26,R21
000964 940e 0c48 	CALL _glcd_writemem
000966 cfe3      	RJMP _0x200009E
                 _0x20000A0:
000967 c02c      	RJMP _0x200009C
                 _0x200009D:
000968 30e9      	CPI  R30,LOW(0x9)
000969 f411      	BRNE _0x20000A1
00096a e050      	LDI  R21,LOW(0)
00096b c003      	RJMP _0x20000A2
                 _0x20000A1:
00096c 30ea      	CPI  R30,LOW(0xA)
00096d f4a9      	BRNE _0x20000A8
00096e ef5f      	LDI  R21,LOW(255)
                 _0x20000A2:
00096f 940e 0dd2 	CALL SUBOPT_0x30
000971 2fae      	MOV  R26,R30
000972 2fe2      	MOV  R30,R18
000973 940e 0e48 	CALL __LSRB12
000975 2f5e      	MOV  R21,R30
                 _0x20000A5:
000976 931f      	PUSH R17
000977 5f1f      	SUBI R17,-1
000978 85ee      	LDD  R30,Y+14
000979 91af      	POP  R26
00097a 17ae      	CP   R26,R30
00097b f430      	BRSH _0x20000A7
00097c 940e 0dd6 	CALL SUBOPT_0x31
00097e 934a      	ST   -Y,R20
00097f e0a0      	LDI  R26,LOW(0)
000980 de08      	RCALL _ks0108_wrmasked_G100
000981 cff4      	RJMP _0x20000A5
                 _0x20000A7:
000982 c011      	RJMP _0x200009C
                 _0x20000A8:
                 _0x20000A9:
000983 931f      	PUSH R17
000984 5f1f      	SUBI R17,-1
000985 85ee      	LDD  R30,Y+14
000986 91af      	POP  R26
000987 17ae      	CP   R26,R30
000988 f458      	BRSH _0x20000AB
000989 940e 0dee 	CALL SUBOPT_0x34
00098b 2fae      	MOV  R26,R30
00098c 2fe2      	MOV  R30,R18
00098d 940e 0e48 	CALL __LSRB12
00098f 93ea      	ST   -Y,R30
000990 934a      	ST   -Y,R20
000991 85ad      	LDD  R26,Y+13
000992 ddf6      	RCALL _ks0108_wrmasked_G100
000993 cfef      	RJMP _0x20000A9
                 _0x20000AB:
                 _0x200009C:
                 _0x2000081:
000994 85e8      	LDD  R30,Y+8
000995 85aa      	LDD  R26,Y+10
000996 85bb      	LDD  R27,Y+10+1
000997 e0f0      	LDI  R31,0
000998 0fea      	ADD  R30,R26
000999 1ffb      	ADC  R31,R27
00099a 87ea      	STD  Y+10,R30
00099b 87fb      	STD  Y+10+1,R31
00099c ceb9      	RJMP _0x2000054
                 _0x2000056:
                 _0x2100008:
00099d 940e 0e84 	CALL __LOADLOCR6
00099f 9661      	ADIW R28,17
0009a0 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
0009a1 940e 0d02 	CALL SUBOPT_0x11
0009a3 940e 0e79 	CALL __CPW02
0009a5 f024      	BRLT _0x2020003
0009a6 e0e0      	LDI  R30,LOW(0)
0009a7 e0f0      	LDI  R31,HIGH(0)
0009a8 940c 0bff 	JMP  _0x2100003
                 _0x2020003:
0009aa 81a8      	LD   R26,Y
0009ab 81b9      	LDD  R27,Y+1
0009ac 38a0      	CPI  R26,LOW(0x80)
0009ad e0e0      	LDI  R30,HIGH(0x80)
0009ae 07be      	CPC  R27,R30
0009af f024      	BRLT _0x2020004
0009b0 e7ef      	LDI  R30,LOW(127)
0009b1 e0f0      	LDI  R31,HIGH(127)
0009b2 940c 0bff 	JMP  _0x2100003
                 _0x2020004:
0009b4 81e8      	LD   R30,Y
0009b5 81f9      	LDD  R31,Y+1
0009b6 940c 0bff 	JMP  _0x2100003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
0009b8 940e 0d02 	CALL SUBOPT_0x11
0009ba 940e 0e79 	CALL __CPW02
0009bc f024      	BRLT _0x2020005
0009bd e0e0      	LDI  R30,LOW(0)
0009be e0f0      	LDI  R31,HIGH(0)
0009bf 940c 0bff 	JMP  _0x2100003
                 _0x2020005:
0009c1 81a8      	LD   R26,Y
0009c2 81b9      	LDD  R27,Y+1
0009c3 34a0      	CPI  R26,LOW(0x40)
0009c4 e0e0      	LDI  R30,HIGH(0x40)
0009c5 07be      	CPC  R27,R30
0009c6 f024      	BRLT _0x2020006
0009c7 e3ef      	LDI  R30,LOW(63)
0009c8 e0f0      	LDI  R31,HIGH(63)
0009c9 940c 0bff 	JMP  _0x2100003
                 _0x2020006:
0009cb 81e8      	LD   R30,Y
0009cc 81f9      	LDD  R31,Y+1
0009cd 940c 0bff 	JMP  _0x2100003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
0009cf 93ba      	ST   -Y,R27
0009d0 93aa      	ST   -Y,R26
0009d1 9723      	SBIW R28,3
0009d2 940e 0dfb 	CALL SUBOPT_0x35
0009d4 018f      	MOVW R16,R30
0009d5 2e00      	MOV  R0,R16
0009d6 2a01      	OR   R0,R17
0009d7 f419      	BRNE _0x202000B
0009d8 e0e0      	LDI  R30,LOW(0)
0009d9 e0f0      	LDI  R31,HIGH(0)
0009da c05f      	RJMP _0x2100007
                 _0x202000B:
0009db 940e 0e02 	CALL SUBOPT_0x36
0009dd 820f      	STD  Y+7,R0
0009de 940e 0e02 	CALL SUBOPT_0x36
0009e0 820e      	STD  Y+6,R0
0009e1 940e 0e02 	CALL SUBOPT_0x36
0009e3 8608      	STD  Y+8,R0
0009e4 85eb      	LDD  R30,Y+11
0009e5 85a8      	LDD  R26,Y+8
0009e6 17ea      	CP   R30,R26
0009e7 f418      	BRSH _0x202000C
0009e8 e0e0      	LDI  R30,LOW(0)
0009e9 e0f0      	LDI  R31,HIGH(0)
0009ea c04f      	RJMP _0x2100007
                 _0x202000C:
0009eb 01f8      	MOVW R30,R16
                +
0009ec 5f0f     +SUBI R16 , LOW ( - 1 )
0009ed 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0009ee 9154      	LPM  R21,Z
0009ef 85a8      	LDD  R26,Y+8
0009f0 27bb      	CLR  R27
0009f1 27ee      	CLR  R30
0009f2 0fa5      	ADD  R26,R21
0009f3 1fbe      	ADC  R27,R30
0009f4 85eb      	LDD  R30,Y+11
0009f5 e0f0      	LDI  R31,0
0009f6 17ea      	CP   R30,R26
0009f7 07fb      	CPC  R31,R27
0009f8 f018      	BRLO _0x202000D
0009f9 e0e0      	LDI  R30,LOW(0)
0009fa e0f0      	LDI  R31,HIGH(0)
0009fb c03e      	RJMP _0x2100007
                 _0x202000D:
0009fc 81ee      	LDD  R30,Y+6
0009fd 95e6      	LSR  R30
0009fe 95e6      	LSR  R30
0009ff 95e6      	LSR  R30
000a00 2f4e      	MOV  R20,R30
000a01 81ee      	LDD  R30,Y+6
000a02 70e7      	ANDI R30,LOW(0x7)
000a03 f009      	BREQ _0x202000E
000a04 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
000a05 81ef      	LDD  R30,Y+7
000a06 30e0      	CPI  R30,0
000a07 f0a1      	BREQ _0x202000F
000a08 85a9      	LDD  R26,Y+9
000a09 85ba      	LDD  R27,Y+9+1
000a0a 93ec      	ST   X,R30
000a0b 85a8      	LDD  R26,Y+8
000a0c 85eb      	LDD  R30,Y+11
000a0d 1bea      	SUB  R30,R26
000a0e e0f0      	LDI  R31,0
000a0f 01df      	MOVW R26,R30
000a10 81ef      	LDD  R30,Y+7
000a11 e0f0      	LDI  R31,0
000a12 940e 0e50 	CALL __MULW12U
000a14 01df      	MOVW R26,R30
000a15 2fe4      	MOV  R30,R20
000a16 e0f0      	LDI  R31,0
000a17 940e 0e50 	CALL __MULW12U
000a19 0fe0      	ADD  R30,R16
000a1a 1ff1      	ADC  R31,R17
000a1b c01e      	RJMP _0x2100007
                 _0x202000F:
000a1c 0198      	MOVW R18,R16
000a1d 2fe5      	MOV  R30,R21
000a1e e0f0      	LDI  R31,0
                +
000a1f 0f0e     +ADD R16 , R30
000a20 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
000a21 85a8      	LDD  R26,Y+8
000a22 5faf      	SUBI R26,-LOW(1)
000a23 87a8      	STD  Y+8,R26
000a24 50a1      	SUBI R26,LOW(1)
000a25 85eb      	LDD  R30,Y+11
000a26 17ae      	CP   R26,R30
000a27 f460      	BRSH _0x2020012
000a28 01f9      	MOVW R30,R18
                +
000a29 5f2f     +SUBI R18 , LOW ( - 1 )
000a2a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000a2b 91a4      	LPM  R26,Z
000a2c e0b0      	LDI  R27,0
000a2d 2fe4      	MOV  R30,R20
000a2e e0f0      	LDI  R31,0
000a2f 940e 0e50 	CALL __MULW12U
                +
000a31 0f0e     +ADD R16 , R30
000a32 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000a33 cfed      	RJMP _0x2020010
                 _0x2020012:
000a34 01f9      	MOVW R30,R18
000a35 91e4      	LPM  R30,Z
000a36 85a9      	LDD  R26,Y+9
000a37 85ba      	LDD  R27,Y+9+1
000a38 93ec      	ST   X,R30
000a39 01f8      	MOVW R30,R16
                 _0x2100007:
000a3a 940e 0e84 	CALL __LOADLOCR6
000a3c 962c      	ADIW R28,12
000a3d 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
000a3e e0e0      	LDI  R30,LOW(0)
                +
000a3f 93e0 0262+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000a41 91a0 0263+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000a43 27bb      	CLR  R27
000a44 940e 0e07 	CALL SUBOPT_0x37
000a46 e0f0      	LDI  R31,0
000a47 0fae      	ADD  R26,R30
000a48 1fbf      	ADC  R27,R31
                +
000a49 91e0 0267+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000a4b e0f0      	LDI  R31,0
000a4c 0fae      	ADD  R26,R30
000a4d 1fbf      	ADC  R27,R31
000a4e df69      	RCALL _glcd_clipy
                +
000a4f 93e0 0263+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000a51 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000a52 93aa      	ST   -Y,R26
000a53 9721      	SBIW R28,1
000a54 940e 0dfb 	CALL SUBOPT_0x35
000a56 9730      	SBIW R30,0
000a57 f409      	BRNE PC+2
000a58 c055      	RJMP _0x202001F
000a59 81af      	LDD  R26,Y+7
000a5a 30aa      	CPI  R26,LOW(0xA)
000a5b f409      	BRNE _0x2020020
000a5c c04f      	RJMP _0x2020021
                 _0x2020020:
000a5d 81ef      	LDD  R30,Y+7
000a5e 93ea      	ST   -Y,R30
000a5f 01de      	MOVW R26,R28
000a60 9617      	ADIW R26,7
000a61 df6d      	RCALL _glcd_getcharw_G101
000a62 01af      	MOVW R20,R30
000a63 9730      	SBIW R30,0
000a64 f409      	BRNE _0x2020022
000a65 c04a      	RJMP _0x2100006
                 _0x2020022:
                +
000a66 91e0 0266+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000a68 81ae      	LDD  R26,Y+6
000a69 0fea      	ADD  R30,R26
000a6a 2f3e      	MOV  R19,R30
                +
000a6b 91a0 0262+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
000a6d 27bb      	CLR  R27
000a6e e0f0      	LDI  R31,0
000a6f 0fea      	ADD  R30,R26
000a70 1ffb      	ADC  R31,R27
000a71 018f      	MOVW R16,R30
                +
000a72 3801     +CPI R16 , LOW ( 129 )
000a73 e0e0     +LDI R30 , HIGH ( 129 )
000a74 071e     +CPC R17 , R30
                 	__CPWRN 16,17,129
000a75 f018      	BRLO _0x2020023
000a76 2f03      	MOV  R16,R19
000a77 2711      	CLR  R17
000a78 dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
000a79 91e0 0262+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000a7b 93ea      	ST   -Y,R30
                +
000a7c 91e0 0263+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000a7e 93ea      	ST   -Y,R30
000a7f 85e8      	LDD  R30,Y+8
000a80 93ea      	ST   -Y,R30
000a81 940e 0e07 	CALL SUBOPT_0x37
000a83 93ea      	ST   -Y,R30
000a84 e0e1      	LDI  R30,LOW(1)
000a85 93ea      	ST   -Y,R30
000a86 935a      	ST   -Y,R21
000a87 934a      	ST   -Y,R20
000a88 e0a7      	LDI  R26,LOW(7)
000a89 dd3a      	RCALL _glcd_block
                +
000a8a 91e0 0262+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000a8c 81ae      	LDD  R26,Y+6
000a8d 0fea      	ADD  R30,R26
000a8e 93ea      	ST   -Y,R30
                +
000a8f 91e0 0263+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000a91 93ea      	ST   -Y,R30
                +
000a92 91e0 0266+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000a94 93ea      	ST   -Y,R30
000a95 940e 0e07 	CALL SUBOPT_0x37
000a97 940e 0e0e 	CALL SUBOPT_0x38
                +
000a99 91e0 0262+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
000a9b 93ea      	ST   -Y,R30
                +
000a9c 91a0 0263+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000a9e 940e 0e07 	CALL SUBOPT_0x37
000aa0 0fea      	ADD  R30,R26
000aa1 93ea      	ST   -Y,R30
000aa2 933a      	ST   -Y,R19
                +
000aa3 91e0 0267+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000aa5 940e 0e0e 	CALL SUBOPT_0x38
000aa7 e8e0      	LDI  R30,LOW(128)
000aa8 e0f0      	LDI  R31,HIGH(128)
000aa9 17e0      	CP   R30,R16
000aaa 07f1      	CPC  R31,R17
000aab f411      	BRNE _0x2020024
                 _0x2020021:
000aac df91      	RCALL _glcd_new_line_G101
000aad c002      	RJMP _0x2100006
                 _0x2020024:
                 _0x202001F:
                +
000aae 9300 0262+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2100006:
000ab0 940e 0e84 	CALL __LOADLOCR6
000ab2 9628      	ADIW R28,8
000ab3 9508      	RET
                 ; .FEND
                 _glcd_outtextxyf:
                 ; .FSTART _glcd_outtextxyf
000ab4 93ba      	ST   -Y,R27
000ab5 93aa      	ST   -Y,R26
000ab6 931a      	ST   -Y,R17
000ab7 81ec      	LDD  R30,Y+4
000ab8 93ea      	ST   -Y,R30
000ab9 81ac      	LDD  R26,Y+4
000aba d029      	RCALL _glcd_moveto
                 _0x2020028:
000abb 81e9      	LDD  R30,Y+1
000abc 81fa      	LDD  R31,Y+1+1
000abd 9631      	ADIW R30,1
000abe 83e9      	STD  Y+1,R30
000abf 83fa      	STD  Y+1+1,R31
000ac0 9731      	SBIW R30,1
000ac1 91e4      	LPM  R30,Z
000ac2 2f1e      	MOV  R17,R30
000ac3 30e0      	CPI  R30,0
000ac4 f019      	BREQ _0x202002A
000ac5 2fa1      	MOV  R26,R17
000ac6 df8b      	RCALL _glcd_putchar
000ac7 cff3      	RJMP _0x2020028
                 _0x202002A:
000ac8 8118      	LDD  R17,Y+0
000ac9 c12a      	RJMP _0x2100004
                 ; .FEND
                 _glcd_putpixelm_G101:
                 ; .FSTART _glcd_putpixelm_G101
000aca 93aa      	ST   -Y,R26
000acb 81ea      	LDD  R30,Y+2
000acc 93ea      	ST   -Y,R30
000acd 81ea      	LDD  R30,Y+2
000ace 93ea      	ST   -Y,R30
                +
000acf 91e0 0269+LDS R30 , _glcd_state + ( 9 )
                 	__GETB1MN _glcd_state,9
000ad1 81aa      	LDD  R26,Y+2
000ad2 23ea      	AND  R30,R26
000ad3 f019      	BREQ _0x202003E
000ad4 91e0 0260 	LDS  R30,_glcd_state
000ad6 c002      	RJMP _0x202003F
                 _0x202003E:
                +
000ad7 91e0 0261+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
                 _0x202003F:
000ad9 2fae      	MOV  R26,R30
000ada dc87      	RCALL _glcd_putpixel
000adb 81e8      	LD   R30,Y
000adc 0fee      	LSL  R30
000add 83e8      	ST   Y,R30
000ade 30e0      	CPI  R30,0
000adf f411      	BRNE _0x2020041
000ae0 e0e1      	LDI  R30,LOW(1)
000ae1 83e8      	ST   Y,R30
                 _0x2020041:
000ae2 81e8      	LD   R30,Y
000ae3 c162      	RJMP _0x2100002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
000ae4 93aa      	ST   -Y,R26
000ae5 81a9      	LDD  R26,Y+1
000ae6 27bb      	CLR  R27
000ae7 deb9      	RCALL _glcd_clipx
                +
000ae8 93e0 0262+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000aea 81a8      	LD   R26,Y
000aeb 27bb      	CLR  R27
000aec decb      	RCALL _glcd_clipy
                +
000aed 93e0 0263+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000aef c10f      	RJMP _0x2100003
                 ; .FEND
                 _glcd_line:
                 ; .FSTART _glcd_line
000af0 93aa      	ST   -Y,R26
000af1 972b      	SBIW R28,11
000af2 940e 0e7d 	CALL __SAVELOCR6
000af4 89ac      	LDD  R26,Y+20
000af5 27bb      	CLR  R27
000af6 deaa      	RCALL _glcd_clipx
000af7 8bec      	STD  Y+20,R30
000af8 89aa      	LDD  R26,Y+18
000af9 27bb      	CLR  R27
000afa dea6      	RCALL _glcd_clipx
000afb 8bea      	STD  Y+18,R30
000afc 89ab      	LDD  R26,Y+19
000afd 27bb      	CLR  R27
000afe deb9      	RCALL _glcd_clipy
000aff 8beb      	STD  Y+19,R30
000b00 89a9      	LDD  R26,Y+17
000b01 27bb      	CLR  R27
000b02 deb5      	RCALL _glcd_clipy
000b03 8be9      	STD  Y+17,R30
000b04 89ea      	LDD  R30,Y+18
                +
000b05 93e0 0262+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
000b07 89e9      	LDD  R30,Y+17
                +
000b08 93e0 0263+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000b0a e0e1      	LDI  R30,LOW(1)
000b0b 87e8      	STD  Y+8,R30
000b0c 89e9      	LDD  R30,Y+17
000b0d 89ab      	LDD  R26,Y+19
000b0e 17ea      	CP   R30,R26
000b0f f571      	BRNE _0x2020042
000b10 891c      	LDD  R17,Y+20
000b11 89aa      	LDD  R26,Y+18
000b12 171a      	CP   R17,R26
000b13 f431      	BRNE _0x2020043
000b14 931a      	ST   -Y,R17
000b15 89ec      	LDD  R30,Y+20
000b16 93ea      	ST   -Y,R30
000b17 e0a1      	LDI  R26,LOW(1)
000b18 dfb1      	RCALL _glcd_putpixelm_G101
000b19 c0c8      	RJMP _0x2100005
                 _0x2020043:
000b1a 89aa      	LDD  R26,Y+18
000b1b 171a      	CP   R17,R26
000b1c f430      	BRSH _0x2020044
000b1d 89ea      	LDD  R30,Y+18
000b1e 1be1      	SUB  R30,R17
000b1f 2f0e      	MOV  R16,R30
                +
000b20 e041     +LDI R20 , LOW ( 1 )
000b21 e050     +LDI R21 , HIGH ( 1 )
                 	__GETWRN 20,21,1
000b22 c006      	RJMP _0x2020045
                 _0x2020044:
000b23 89aa      	LDD  R26,Y+18
000b24 2fe1      	MOV  R30,R17
000b25 1bea      	SUB  R30,R26
000b26 2f0e      	MOV  R16,R30
                +
000b27 ef4f     +LDI R20 , LOW ( - 1 )
000b28 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 _0x2020045:
                 _0x2020047:
000b29 893b      	LDD  R19,Y+19
000b2a e0e0      	LDI  R30,LOW(0)
000b2b 83ee      	STD  Y+6,R30
                 _0x2020049:
000b2c 940e 0e18 	CALL SUBOPT_0x39
000b2e f438      	BRSH _0x202004B
000b2f 931a      	ST   -Y,R17
000b30 933a      	ST   -Y,R19
000b31 9533      	INC  R19
000b32 85aa      	LDD  R26,Y+10
000b33 df96      	RCALL _glcd_putpixelm_G101
000b34 83ef      	STD  Y+7,R30
000b35 cff6      	RJMP _0x2020049
                 _0x202004B:
000b36 81ef      	LDD  R30,Y+7
000b37 87e8      	STD  Y+8,R30
000b38 0f14      	ADD  R17,R20
000b39 2fe0      	MOV  R30,R16
000b3a 5001      	SUBI R16,1
000b3b 30e0      	CPI  R30,0
000b3c f761      	BRNE _0x2020047
000b3d c0a4      	RJMP _0x202004C
                 _0x2020042:
000b3e 89ea      	LDD  R30,Y+18
000b3f 89ac      	LDD  R26,Y+20
000b40 17ea      	CP   R30,R26
000b41 f539      	BRNE _0x202004D
000b42 893b      	LDD  R19,Y+19
000b43 89a9      	LDD  R26,Y+17
000b44 173a      	CP   R19,R26
000b45 f430      	BRSH _0x202004E
000b46 89e9      	LDD  R30,Y+17
000b47 1be3      	SUB  R30,R19
000b48 2f2e      	MOV  R18,R30
000b49 e0e1      	LDI  R30,LOW(1)
000b4a e0f0      	LDI  R31,HIGH(1)
000b4b c006      	RJMP _0x202011B
                 _0x202004E:
000b4c 89a9      	LDD  R26,Y+17
000b4d 2fe3      	MOV  R30,R19
000b4e 1bea      	SUB  R30,R26
000b4f 2f2e      	MOV  R18,R30
000b50 efef      	LDI  R30,LOW(65535)
000b51 efff      	LDI  R31,HIGH(65535)
                 _0x202011B:
000b52 87ed      	STD  Y+13,R30
000b53 87fe      	STD  Y+13+1,R31
                 _0x2020051:
000b54 891c      	LDD  R17,Y+20
000b55 e0e0      	LDI  R30,LOW(0)
000b56 83ee      	STD  Y+6,R30
                 _0x2020053:
000b57 940e 0e18 	CALL SUBOPT_0x39
000b59 f430      	BRSH _0x2020055
000b5a 931a      	ST   -Y,R17
000b5b 9513      	INC  R17
000b5c 940e 0e20 	CALL SUBOPT_0x3A
000b5e 83ef      	STD  Y+7,R30
000b5f cff7      	RJMP _0x2020053
                 _0x2020055:
000b60 81ef      	LDD  R30,Y+7
000b61 87e8      	STD  Y+8,R30
000b62 85ed      	LDD  R30,Y+13
000b63 0f3e      	ADD  R19,R30
000b64 2fe2      	MOV  R30,R18
000b65 5021      	SUBI R18,1
000b66 30e0      	CPI  R30,0
000b67 f761      	BRNE _0x2020051
000b68 c079      	RJMP _0x2020056
                 _0x202004D:
000b69 e0e0      	LDI  R30,LOW(0)
000b6a 83ee      	STD  Y+6,R30
                 _0x2020057:
000b6b 940e 0e18 	CALL SUBOPT_0x39
000b6d f008      	BRLO PC+2
000b6e c073      	RJMP _0x2020059
000b6f 891c      	LDD  R17,Y+20
000b70 893b      	LDD  R19,Y+19
000b71 e0e1      	LDI  R30,LOW(1)
000b72 2f2e      	MOV  R18,R30
000b73 2f0e      	MOV  R16,R30
000b74 89aa      	LDD  R26,Y+18
000b75 27bb      	CLR  R27
000b76 89ec      	LDD  R30,Y+20
000b77 e0f0      	LDI  R31,0
000b78 1bae      	SUB  R26,R30
000b79 0bbf      	SBC  R27,R31
000b7a 01ad      	MOVW R20,R26
000b7b 2355      	TST  R21
000b7c f42a      	BRPL _0x202005A
000b7d ef0f      	LDI  R16,LOW(255)
000b7e 01fa      	MOVW R30,R20
000b7f 940e 0e3c 	CALL __ANEGW1
000b81 01af      	MOVW R20,R30
                 _0x202005A:
000b82 01fa      	MOVW R30,R20
000b83 0fee      	LSL  R30
000b84 1fff      	ROL  R31
000b85 87ef      	STD  Y+15,R30
000b86 8bf8      	STD  Y+15+1,R31
000b87 89a9      	LDD  R26,Y+17
000b88 27bb      	CLR  R27
000b89 89eb      	LDD  R30,Y+19
000b8a e0f0      	LDI  R31,0
000b8b 1bae      	SUB  R26,R30
000b8c 0bbf      	SBC  R27,R31
000b8d 87ad      	STD  Y+13,R26
000b8e 87be      	STD  Y+13+1,R27
000b8f 85ae      	LDD  R26,Y+14
000b90 23aa      	TST  R26
000b91 f43a      	BRPL _0x202005B
000b92 ef2f      	LDI  R18,LOW(255)
000b93 85ed      	LDD  R30,Y+13
000b94 85fe      	LDD  R31,Y+13+1
000b95 940e 0e3c 	CALL __ANEGW1
000b97 87ed      	STD  Y+13,R30
000b98 87fe      	STD  Y+13+1,R31
                 _0x202005B:
000b99 85ed      	LDD  R30,Y+13
000b9a 85fe      	LDD  R31,Y+13+1
000b9b 0fee      	LSL  R30
000b9c 1fff      	ROL  R31
000b9d 87eb      	STD  Y+11,R30
000b9e 87fc      	STD  Y+11+1,R31
000b9f 931a      	ST   -Y,R17
000ba0 933a      	ST   -Y,R19
000ba1 e0a1      	LDI  R26,LOW(1)
000ba2 df27      	RCALL _glcd_putpixelm_G101
000ba3 87e8      	STD  Y+8,R30
000ba4 e0e0      	LDI  R30,LOW(0)
000ba5 87e9      	STD  Y+9,R30
000ba6 87ea      	STD  Y+9+1,R30
000ba7 85ad      	LDD  R26,Y+13
000ba8 85be      	LDD  R27,Y+13+1
000ba9 174a      	CP   R20,R26
000baa 075b      	CPC  R21,R27
000bab f0bc      	BRLT _0x202005C
                 _0x202005E:
000bac 0f10      	ADD  R17,R16
000bad 85eb      	LDD  R30,Y+11
000bae 85fc      	LDD  R31,Y+11+1
000baf 940e 0e24 	CALL SUBOPT_0x3B
000bb1 85a9      	LDD  R26,Y+9
000bb2 85ba      	LDD  R27,Y+9+1
000bb3 174a      	CP   R20,R26
000bb4 075b      	CPC  R21,R27
000bb5 f42c      	BRGE _0x2020060
000bb6 0f32      	ADD  R19,R18
000bb7 85af      	LDD  R26,Y+15
000bb8 89b8      	LDD  R27,Y+15+1
000bb9 940e 0e2b 	CALL SUBOPT_0x3C
                 _0x2020060:
000bbb 931a      	ST   -Y,R17
000bbc 940e 0e20 	CALL SUBOPT_0x3A
000bbe 87e8      	STD  Y+8,R30
000bbf 89ea      	LDD  R30,Y+18
000bc0 17e1      	CP   R30,R17
000bc1 f751      	BRNE _0x202005E
000bc2 c018      	RJMP _0x2020061
                 _0x202005C:
                 _0x2020063:
000bc3 0f32      	ADD  R19,R18
000bc4 85ef      	LDD  R30,Y+15
000bc5 89f8      	LDD  R31,Y+15+1
000bc6 940e 0e24 	CALL SUBOPT_0x3B
000bc8 85ed      	LDD  R30,Y+13
000bc9 85fe      	LDD  R31,Y+13+1
000bca 85a9      	LDD  R26,Y+9
000bcb 85ba      	LDD  R27,Y+9+1
000bcc 17ea      	CP   R30,R26
000bcd 07fb      	CPC  R31,R27
000bce f42c      	BRGE _0x2020065
000bcf 0f10      	ADD  R17,R16
000bd0 85ab      	LDD  R26,Y+11
000bd1 85bc      	LDD  R27,Y+11+1
000bd2 940e 0e2b 	CALL SUBOPT_0x3C
                 _0x2020065:
000bd4 931a      	ST   -Y,R17
000bd5 940e 0e20 	CALL SUBOPT_0x3A
000bd7 87e8      	STD  Y+8,R30
000bd8 89e9      	LDD  R30,Y+17
000bd9 17e3      	CP   R30,R19
000bda f741      	BRNE _0x2020063
                 _0x2020061:
000bdb 89eb      	LDD  R30,Y+19
000bdc 5fef      	SUBI R30,-LOW(1)
000bdd 8beb      	STD  Y+19,R30
000bde 89e9      	LDD  R30,Y+17
000bdf 5fef      	SUBI R30,-LOW(1)
000be0 8be9      	STD  Y+17,R30
000be1 cf89      	RJMP _0x2020057
                 _0x2020059:
                 _0x2020056:
                 _0x202004C:
                 _0x2100005:
000be2 940e 0e84 	CALL __LOADLOCR6
000be4 9665      	ADIW R28,21
000be5 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000be6 93ba      	ST   -Y,R27
000be7 93aa      	ST   -Y,R26
000be8 81b9          ldd  r27,y+1
000be9 81a8          ld   r26,y
000bea 9610          adiw r26,0
000beb f031          breq memset1
000bec 81fc          ldd  r31,y+4
000bed 81eb          ldd  r30,y+3
000bee 816a          ldd  r22,y+2
                 memset0:
000bef 9361          st   z+,r22
000bf0 9711          sbiw r26,1
000bf1 f7e9          brne memset0
                 memset1:
000bf2 81eb          ldd  r30,y+3
000bf3 81fc          ldd  r31,y+4
                 _0x2100004:
000bf4 9625      	ADIW R28,5
000bf5 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000bf6 93aa      	ST   -Y,R26
000bf7 81e8      	LD   R30,Y
000bf8 e0f0      	LDI  R31,0
000bf9 5ce8      	SUBI R30,LOW(-__glcd_mask*2)
000bfa 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000bfb 91a4      	LPM  R26,Z
000bfc 81e9      	LDD  R30,Y+1
000bfd 940e 0e40 	CALL __LSLB12
                 _0x2100003:
000bff 9622      	ADIW R28,2
000c00 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000c01 93aa      	ST   -Y,R26
000c02 931a      	ST   -Y,R17
000c03 81e9      	LDD  R30,Y+1
000c04 30e7      	CPI  R30,LOW(0x7)
000c05 f011      	BREQ _0x2080007
000c06 30ea      	CPI  R30,LOW(0xA)
000c07 f419      	BRNE _0x2080008
                 _0x2080007:
000c08 9110 0260 	LDS  R17,_glcd_state
000c0a c009      	RJMP _0x2080009
                 _0x2080008:
000c0b 30e9      	CPI  R30,LOW(0x9)
000c0c f419      	BRNE _0x208000B
                +
000c0d 9110 0261+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000c0f c004      	RJMP _0x2080009
                 _0x208000B:
000c10 30e8      	CPI  R30,LOW(0x8)
000c11 f4a1      	BRNE _0x2080005
                +
000c12 9110 0270+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x2080009:
                +
000c14 91e0 0261+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000c16 30e0      	CPI  R30,0
000c17 f049      	BREQ _0x208000E
000c18 3010      	CPI  R17,0
000c19 f019      	BREQ _0x208000F
000c1a efef      	LDI  R30,LOW(255)
000c1b 8118      	LDD  R17,Y+0
000c1c c029      	RJMP _0x2100002
                 _0x208000F:
000c1d 81ea      	LDD  R30,Y+2
000c1e 95e0      	COM  R30
000c1f 8118      	LDD  R17,Y+0
000c20 c025      	RJMP _0x2100002
                 _0x208000E:
000c21 3010      	CPI  R17,0
000c22 f419      	BRNE _0x2080011
000c23 e0e0      	LDI  R30,LOW(0)
000c24 8118      	LDD  R17,Y+0
000c25 c020      	RJMP _0x2100002
                 _0x2080011:
                 _0x2080005:
000c26 81ea      	LDD  R30,Y+2
000c27 8118      	LDD  R17,Y+0
000c28 c01d      	RJMP _0x2100002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000c29 93ba      	ST   -Y,R27
000c2a 93aa      	ST   -Y,R26
000c2b 81ea      	LDD  R30,Y+2
000c2c 30e1      	CPI  R30,LOW(0x1)
000c2d f421      	BRNE _0x2080015
000c2e 81e8      	LD   R30,Y
000c2f 81f9      	LDD  R31,Y+1
000c30 91e4      	LPM  R30,Z
000c31 c014      	RJMP _0x2100002
                 _0x2080015:
000c32 30e2      	CPI  R30,LOW(0x2)
000c33 f429      	BRNE _0x2080016
000c34 81a8      	LD   R26,Y
000c35 81b9      	LDD  R27,Y+1
000c36 940e 0e5c 	CALL __EEPROMRDB
000c38 c00d      	RJMP _0x2100002
                 _0x2080016:
000c39 30e3      	CPI  R30,LOW(0x3)
000c3a f441      	BRNE _0x2080018
000c3b 81a8      	LD   R26,Y
000c3c 81b9      	LDD  R27,Y+1
                +
000c3d 91e0 0279+LDS R30 , _glcd_state + ( 25 )
000c3f 91f0 027a+LDS R31 , _glcd_state + ( 25 ) + 1
000c41 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000c42 c003      	RJMP _0x2100002
                 _0x2080018:
000c43 81a8      	LD   R26,Y
000c44 81b9      	LDD  R27,Y+1
000c45 91ec      	LD   R30,X
                 _0x2100002:
000c46 9623      	ADIW R28,3
000c47 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000c48 93aa      	ST   -Y,R26
000c49 81eb      	LDD  R30,Y+3
000c4a 30e0      	CPI  R30,0
000c4b f429      	BRNE _0x208001C
000c4c 81e8      	LD   R30,Y
000c4d 81a9      	LDD  R26,Y+1
000c4e 81ba      	LDD  R27,Y+1+1
000c4f 93ec      	ST   X,R30
000c50 c014      	RJMP _0x208001B
                 _0x208001C:
000c51 30e2      	CPI  R30,LOW(0x2)
000c52 f431      	BRNE _0x208001D
000c53 81e8      	LD   R30,Y
000c54 81a9      	LDD  R26,Y+1
000c55 81ba      	LDD  R27,Y+1+1
000c56 940e 0e68 	CALL __EEPROMWRB
000c58 c00c      	RJMP _0x208001B
                 _0x208001D:
000c59 30e3      	CPI  R30,LOW(0x3)
000c5a f451      	BRNE _0x208001B
000c5b 81e9      	LDD  R30,Y+1
000c5c 81fa      	LDD  R31,Y+1+1
000c5d 93fa      	ST   -Y,R31
000c5e 93ea      	ST   -Y,R30
000c5f 81aa      	LDD  R26,Y+2
                +
000c60 91e0 027b+LDS R30 , _glcd_state + ( 27 )
000c62 91f0 027c+LDS R31 , _glcd_state + ( 27 ) + 1
000c64 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x208001B:
                 _0x2100001:
000c65 9624      	ADIW R28,4
000c66 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _glcd_state:
000260           	.BYTE 0x1D
                 _table:
00027d           	.BYTE 0x12
                 _ks0108_coord_G100:
00028f           	.BYTE 0x3
                 __seed_G106:
000292           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x0:
000c67 e1e5      	LDI  R30,LOW(21)
000c68 93ea      	ST   -Y,R30
000c69 e0e0      	LDI  R30,LOW(0)
000c6a 93ea      	ST   -Y,R30
000c6b e1e5      	LDI  R30,LOW(21)
000c6c 93ea      	ST   -Y,R30
000c6d e3af      	LDI  R26,LOW(63)
000c6e 940e 0af0 	CALL _glcd_line
000c70 e0e0      	LDI  R30,LOW(0)
000c71 93ea      	ST   -Y,R30
000c72 e1e5      	LDI  R30,LOW(21)
000c73 93ea      	ST   -Y,R30
000c74 e3ef      	LDI  R30,LOW(63)
000c75 93ea      	ST   -Y,R30
000c76 e1a5      	LDI  R26,LOW(21)
000c77 940e 0af0 	CALL _glcd_line
000c79 e2ea      	LDI  R30,LOW(42)
000c7a 93ea      	ST   -Y,R30
000c7b e0e0      	LDI  R30,LOW(0)
000c7c 93ea      	ST   -Y,R30
000c7d e2ea      	LDI  R30,LOW(42)
000c7e 93ea      	ST   -Y,R30
000c7f e3af      	LDI  R26,LOW(63)
000c80 940e 0af0 	CALL _glcd_line
000c82 e0e0      	LDI  R30,LOW(0)
000c83 93ea      	ST   -Y,R30
000c84 e2ea      	LDI  R30,LOW(42)
000c85 93ea      	ST   -Y,R30
000c86 e3ef      	LDI  R30,LOW(63)
000c87 93ea      	ST   -Y,R30
000c88 e2aa      	LDI  R26,LOW(42)
000c89 940e 0af0 	CALL _glcd_line
000c8b e5e0      	LDI  R30,LOW(80)
000c8c 93ea      	ST   -Y,R30
000c8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000c8e e0e0      	LDI  R30,LOW(0)
000c8f 93ea      	ST   -Y,R30
                +
000c90 e4ac     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000c91 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
000c92 940c 0ab4 	JMP  _glcd_outtextxyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000c94 e5e0      	LDI  R30,LOW(80)
000c95 93ea      	ST   -Y,R30
000c96 e0ea      	LDI  R30,LOW(10)
000c97 93ea      	ST   -Y,R30
                +
000c98 e4af     +LDI R26 , LOW ( 2 * _0x0 + ( 3 ) )
000c99 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW2FN _0x0,3
000c9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000c9b e6e4      	LDI  R30,LOW(100)
000c9c 93ea      	ST   -Y,R30
000c9d e0e0      	LDI  R30,LOW(0)
000c9e 93ea      	ST   -Y,R30
                +
000c9f e5a1     +LDI R26 , LOW ( 2 * _0x0 + ( 5 ) )
000ca0 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW2FN _0x0,5
000ca1 940c 0ab4 	JMP  _glcd_outtextxyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
000ca3 e6e4      	LDI  R30,LOW(100)
000ca4 93ea      	ST   -Y,R30
000ca5 e0ea      	LDI  R30,LOW(10)
000ca6 93ea      	ST   -Y,R30
                +
000ca7 e4af     +LDI R26 , LOW ( 2 * _0x0 + ( 3 ) )
000ca8 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW2FN _0x0,3
000ca9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
000caa e7e8      	LDI  R30,LOW(120)
000cab 93ea      	ST   -Y,R30
000cac e0e0      	LDI  R30,LOW(0)
000cad 93ea      	ST   -Y,R30
                +
000cae e5a4     +LDI R26 , LOW ( 2 * _0x0 + ( 8 ) )
000caf e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW2FN _0x0,8
000cb0 940c 0ab4 	JMP  _glcd_outtextxyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
000cb2 e7e8      	LDI  R30,LOW(120)
000cb3 93ea      	ST   -Y,R30
000cb4 e0ea      	LDI  R30,LOW(10)
000cb5 93ea      	ST   -Y,R30
                +
000cb6 e4ad     +LDI R26 , LOW ( 2 * _0x0 + ( 1 ) )
000cb7 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 1 ) )
                 	__POINTW2FN _0x0,1
000cb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
000cb9 e1e4      	LDI  R30,LOW(20)
000cba 93ea      	ST   -Y,R30
                +
000cbb e5a6     +LDI R26 , LOW ( 2 * _0x0 + ( 10 ) )
000cbc e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW2FN _0x0,10
000cbd 940e 0ab4 	CALL _glcd_outtextxyf
000cbf 2c04      	MOV  R0,R4
000cc0 2805      	OR   R0,R5
000cc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x8:
000cc2 e6ee      	LDI  R30,LOW(110)
000cc3 93ea      	ST   -Y,R30
000cc4 e1e4      	LDI  R30,LOW(20)
000cc5 93ea      	ST   -Y,R30
000cc6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x9:
                +
000cc7 e0a6     +LDI R26 , 6
000cc8 9fa0     +MUL R26 , R16
000cc9 01f0     +MOVW R30 , R0
000cca 9fa1     +MUL R26 , R17
000ccb 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,6
000ccc 58e3      	SUBI R30,LOW(-_table)
000ccd 4ffd      	SBCI R31,HIGH(-_table)
000cce 01df      	MOVW R26,R30
000ccf 01f9      	MOVW R30,R18
000cd0 0fee      	LSL  R30
000cd1 1fff      	ROL  R31
000cd2 0fae      	ADD  R26,R30
000cd3 1fbf      	ADC  R27,R31
000cd4 e0e2      	LDI  R30,LOW(2)
000cd5 e0f0      	LDI  R31,HIGH(2)
000cd6 93ed      	ST   X+,R30
000cd7 93fc      	ST   X,R31
000cd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
000cd9 e4e6      	LDI  R30,LOW(70)
000cda 93ea      	ST   -Y,R30
000cdb e3e8      	LDI  R30,LOW(56)
000cdc 93ea      	ST   -Y,R30
                +
000cdd e6a1     +LDI R26 , LOW ( 2 * _0x0 + ( 21 ) )
000cde e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW2FN _0x0,21
000cdf 940c 0ab4 	JMP  _glcd_outtextxyf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000ce1 940e 073c 	CALL _glcd_clear
000ce3 e1e4      	LDI  R30,LOW(20)
000ce4 93ea      	ST   -Y,R30
000ce5 e2e0      	LDI  R30,LOW(32)
000ce6 93ea      	ST   -Y,R30
000ce7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
000ce8 940e 0ab4 	CALL _glcd_outtextxyf
000cea eda0      	LDI  R26,LOW(2000)
000ceb e0b7      	LDI  R27,HIGH(2000)
000cec 940c 0e32 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0xD:
000cee e3e2      	LDI  R30,LOW(50)
000cef 93ea      	ST   -Y,R30
000cf0 e2e0      	LDI  R30,LOW(32)
000cf1 93ea      	ST   -Y,R30
000cf2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
000cf3 e5e0      	LDI  R30,LOW(80)
000cf4 93ea      	ST   -Y,R30
000cf5 e0ea      	LDI  R30,LOW(10)
000cf6 93ea      	ST   -Y,R30
000cf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
000cf8 e6e4      	LDI  R30,LOW(100)
000cf9 93ea      	ST   -Y,R30
000cfa e0ea      	LDI  R30,LOW(10)
000cfb 93ea      	ST   -Y,R30
000cfc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
000cfd e7e8      	LDI  R30,LOW(120)
000cfe 93ea      	ST   -Y,R30
000cff e0ea      	LDI  R30,LOW(10)
000d00 93ea      	ST   -Y,R30
000d01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000d02 93ba      	ST   -Y,R27
000d03 93aa      	ST   -Y,R26
000d04 81a8      	LD   R26,Y
000d05 81b9      	LDD  R27,Y+1
000d06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12:
000d07 81a8      	LD   R26,Y
000d08 81b9      	LDD  R27,Y+1
000d09 940e 0e58 	CALL __GETW1P
000d0b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13:
000d0c 81a8      	LD   R26,Y
000d0d 81b9      	LDD  R27,Y+1
000d0e 9618      	ADIW R26,8
000d0f 940e 0e58 	CALL __GETW1P
000d11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
000d12 81a8      	LD   R26,Y
000d13 81b9      	LDD  R27,Y+1
000d14 9650      	ADIW R26,16
000d15 940e 0e58 	CALL __GETW1P
000d17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x15:
000d18 e0e8      	LDI  R30,LOW(8)
000d19 e0f0      	LDI  R31,HIGH(8)
000d1a 93fa      	ST   -Y,R31
000d1b 93ea      	ST   -Y,R30
000d1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x16:
000d1d e3e7      	LDI  R30,LOW(55)
000d1e e0f0      	LDI  R31,HIGH(55)
000d1f 93fa      	ST   -Y,R31
000d20 93ea      	ST   -Y,R30
000d21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x17:
000d22 e3a7      	LDI  R26,LOW(55)
000d23 e0b0      	LDI  R27,0
000d24 940e 02df 	CALL _draw_winner_line
000d26 efa4      	LDI  R26,LOW(500)
000d27 e0b1      	LDI  R27,HIGH(500)
000d28 940e 0e32 	CALL _delay_ms
000d2a 940e 073c 	CALL _glcd_clear
000d2c 2c04      	MOV  R0,R4
000d2d 2805      	OR   R0,R5
000d2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x18:
                +
000d2f e9aa     +LDI R26 , LOW ( 2 * _0x0 + ( 78 ) )
000d30 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 78 ) )
                 	__POINTW2FN _0x0,78
000d31 940e 0ab4 	CALL _glcd_outtextxyf
000d33 e4af      	LDI  R26,LOW(79)
000d34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x19:
                +
000d35 eaa2     +LDI R26 , LOW ( 2 * _0x0 + ( 86 ) )
000d36 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 86 ) )
                 	__POINTW2FN _0x0,86
000d37 940e 0ab4 	CALL _glcd_outtextxyf
000d39 e5a8      	LDI  R26,LOW(88)
000d3a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1A:
000d3b efa4      	LDI  R26,LOW(500)
000d3c e0b1      	LDI  R27,HIGH(500)
000d3d 940c 0e32 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1B:
000d3f 81a8      	LD   R26,Y
000d40 81b9      	LDD  R27,Y+1
000d41 9614      	ADIW R26,4
000d42 940e 0e58 	CALL __GETW1P
000d44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C:
000d45 81a8      	LD   R26,Y
000d46 81b9      	LDD  R27,Y+1
000d47 9612      	ADIW R26,2
000d48 940e 0e58 	CALL __GETW1P
000d4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1D:
000d4b 81a8      	LD   R26,Y
000d4c 81b9      	LDD  R27,Y+1
000d4d 961c      	ADIW R26,12
000d4e 940e 0e58 	CALL __GETW1P
000d50 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
000d51 81a8      	LD   R26,Y
000d52 81b9      	LDD  R27,Y+1
000d53 9616      	ADIW R26,6
000d54 940e 0e58 	CALL __GETW1P
000d56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F:
000d57 81e8      	LD   R30,Y
000d58 81f9      	LDD  R31,Y+1
                +
000d59 8400     +LDD R0 , Z + 8
000d5a 8411     +LDD R1 , Z + 8 + 1
                 	__GETWRZ 0,1,8
000d5b 81a8      	LD   R26,Y
000d5c 81b9      	LDD  R27,Y+1
000d5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x20:
000d5e 940e 0e58 	CALL __GETW1P
000d60 15e0      	CP   R30,R0
000d61 05f1      	CPC  R31,R1
000d62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000d63 e2e0      	LDI  R30,LOW(32)
000d64 e0f0      	LDI  R31,HIGH(32)
000d65 93fa      	ST   -Y,R31
000d66 93ea      	ST   -Y,R30
000d67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x22:
000d68 940e 0e58 	CALL __GETW1P
000d6a 30e2      	CPI  R30,LOW(0x2)
000d6b e0a0      	LDI  R26,HIGH(0x2)
000d6c 07fa      	CPC  R31,R26
000d6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x23:
000d6e 93ea      	ST   -Y,R30
000d6f e0ea      	LDI  R30,LOW(10)
000d70 93ea      	ST   -Y,R30
                +
000d71 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
000d72 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
000d73 940e 0ab4 	CALL _glcd_outtextxyf
000d75 cf4c      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x24:
000d76 93ea      	ST   -Y,R30
000d77 e0ea      	LDI  R30,LOW(10)
000d78 93ea      	ST   -Y,R30
                +
000d79 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
000d7a e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
000d7b 940e 0ab4 	CALL _glcd_outtextxyf
000d7d cf44      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x25:
000d7e 93ea      	ST   -Y,R30
000d7f e2e0      	LDI  R30,LOW(32)
000d80 93ea      	ST   -Y,R30
                +
000d81 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
000d82 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
000d83 940e 0ab4 	CALL _glcd_outtextxyf
000d85 cf3c      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x26:
000d86 93ea      	ST   -Y,R30
000d87 e2e0      	LDI  R30,LOW(32)
000d88 93ea      	ST   -Y,R30
                +
000d89 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
000d8a e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
000d8b 940e 0ab4 	CALL _glcd_outtextxyf
000d8d cf34      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x27:
000d8e 93ea      	ST   -Y,R30
000d8f e3e4      	LDI  R30,LOW(52)
000d90 93ea      	ST   -Y,R30
                +
000d91 e5ad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
000d92 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
000d93 940e 0ab4 	CALL _glcd_outtextxyf
000d95 cf2c      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x28:
000d96 93ea      	ST   -Y,R30
000d97 e3e4      	LDI  R30,LOW(52)
000d98 93ea      	ST   -Y,R30
                +
000d99 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 19 ) )
000d9a e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW2FN _0x0,19
000d9b 940e 0ab4 	CALL _glcd_outtextxyf
000d9d cf24      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x29:
000d9e 98c1      	CBI  0x18,1
000d9f efef      	LDI  R30,LOW(255)
000da0 bbea      	OUT  0x1A,R30
000da1 81e8      	LD   R30,Y
000da2 bbeb      	OUT  0x1B,R30
000da3 940e 0654 	CALL _ks0108_enable_G100
000da5 940c 0658 	JMP  _ks0108_disable_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000da7 95e6      	LSR  R30
000da8 95e6      	LSR  R30
000da9 95e6      	LSR  R30
000daa 2fae      	MOV  R26,R30
000dab 940c 0695 	JMP  _ks0108_gotoxp_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B:
000dad 940e 06ba 	CALL _ks0108_wrdata_G100
000daf 940c 06a5 	JMP  _ks0108_nextx_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2C:
000db1 0fea      	ADD  R30,R26
000db2 1ffb      	ADC  R31,R27
000db3 83ee      	STD  Y+6,R30
000db4 83ff      	STD  Y+6+1,R31
000db5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2D:
000db6 85ec      	LDD  R30,Y+12
000db7 93ea      	ST   -Y,R30
000db8 81ef      	LDD  R30,Y+7
000db9 85f8      	LDD  R31,Y+7+1
000dba 9631      	ADIW R30,1
000dbb 83ef      	STD  Y+7,R30
000dbc 87f8      	STD  Y+7+1,R31
000dbd 9731      	SBIW R30,1
000dbe 93fa      	ST   -Y,R31
000dbf 93ea      	ST   -Y,R30
000dc0 e0a0      	LDI  R26,LOW(0)
000dc1 940c 0c48 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2E:
000dc3 85ec      	LDD  R30,Y+12
000dc4 93ea      	ST   -Y,R30
000dc5 81ef      	LDD  R30,Y+7
000dc6 85f8      	LDD  R31,Y+7+1
000dc7 9631      	ADIW R30,1
000dc8 83ef      	STD  Y+7,R30
000dc9 87f8      	STD  Y+7+1,R31
000dca 9731      	SBIW R30,1
000dcb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2F:
000dcc 2766      	CLR  R22
000dcd 2777      	CLR  R23
000dce 01df      	MOVW R26,R30
000dcf 01cb      	MOVW R24,R22
000dd0 940c 0c29 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30:
000dd2 935a      	ST   -Y,R21
000dd3 85aa      	LDD  R26,Y+10
000dd4 940c 0c01 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31:
000dd6 930a      	ST   -Y,R16
000dd7 9503      	INC  R16
000dd8 89e8      	LDD  R30,Y+16
000dd9 93ea      	ST   -Y,R30
000dda 935a      	ST   -Y,R21
000ddb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
000ddc 930a      	ST   -Y,R16
000ddd 9503      	INC  R16
000dde 89a8      	LDD  R26,Y+16
000ddf 940e 06cc 	CALL _ks0108_rdbyte_G100
000de1 23e4      	AND  R30,R20
000de2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x33:
000de3 2f5e      	MOV  R21,R30
000de4 85ec      	LDD  R30,Y+12
000de5 93ea      	ST   -Y,R30
000de6 81af      	LDD  R26,Y+7
000de7 85b8      	LDD  R27,Y+7+1
000de8 2788      	CLR  R24
000de9 2799      	CLR  R25
000dea 940e 0c29 	CALL _glcd_readmem
000dec 2e1e      	MOV  R1,R30
000ded 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x34:
000dee 930a      	ST   -Y,R16
000def 9503      	INC  R16
000df0 89e8      	LDD  R30,Y+16
000df1 93ea      	ST   -Y,R30
000df2 85ee      	LDD  R30,Y+14
000df3 93ea      	ST   -Y,R30
000df4 85e9      	LDD  R30,Y+9
000df5 85fa      	LDD  R31,Y+9+1
000df6 9631      	ADIW R30,1
000df7 87e9      	STD  Y+9,R30
000df8 87fa      	STD  Y+9+1,R31
000df9 9731      	SBIW R30,1
000dfa cfd1      	RJMP SUBOPT_0x2F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35:
000dfb 940e 0e7d 	CALL __SAVELOCR6
                +
000dfd 91e0 0264+LDS R30 , _glcd_state + ( 4 )
000dff 91f0 0265+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000e01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36:
000e02 01f8      	MOVW R30,R16
                +
000e03 5f0f     +SUBI R16 , LOW ( - 1 )
000e04 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000e05 9004      	LPM  R0,Z
000e06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x37:
                +
000e07 91e0 0264+LDS R30 , _glcd_state + ( 4 )
000e09 91f0 0265+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000e0b 9631      	ADIW R30,1
000e0c 91e4      	LPM  R30,Z
000e0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38:
000e0e 93ea      	ST   -Y,R30
000e0f e0e0      	LDI  R30,LOW(0)
000e10 93ea      	ST   -Y,R30
000e11 e0e0      	LDI  R30,LOW(0)
000e12 e0f0      	LDI  R31,HIGH(0)
000e13 93fa      	ST   -Y,R31
000e14 93ea      	ST   -Y,R30
000e15 e0a9      	LDI  R26,LOW(9)
000e16 940c 07c4 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x39:
000e18 81ae      	LDD  R26,Y+6
000e19 5faf      	SUBI R26,-LOW(1)
000e1a 83ae      	STD  Y+6,R26
000e1b 50a1      	SUBI R26,LOW(1)
                +
000e1c 91e0 0268+LDS R30 , _glcd_state + ( 8 )
                 	__GETB1MN _glcd_state,8
000e1e 17ae      	CP   R26,R30
000e1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A:
000e20 933a      	ST   -Y,R19
000e21 85aa      	LDD  R26,Y+10
000e22 940c 0aca 	JMP  _glcd_putpixelm_G101
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B:
000e24 85a9      	LDD  R26,Y+9
000e25 85ba      	LDD  R27,Y+9+1
000e26 0fea      	ADD  R30,R26
000e27 1ffb      	ADC  R31,R27
000e28 87e9      	STD  Y+9,R30
000e29 87fa      	STD  Y+9+1,R31
000e2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C:
000e2b 85e9      	LDD  R30,Y+9
000e2c 85fa      	LDD  R31,Y+9+1
000e2d 1bea      	SUB  R30,R26
000e2e 0bfb      	SBC  R31,R27
000e2f 87e9      	STD  Y+9,R30
000e30 87fa      	STD  Y+9+1,R31
000e31 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000e32 9610      	adiw r26,0
000e33 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000e34 ef8a     +LDI R24 , LOW ( 0xFA )
000e35 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000e36 9701     +SBIW R24 , 1
000e37 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
000e38 95a8      	wdr
000e39 9711      	sbiw r26,1
000e3a f7c9      	brne __delay_ms0
                 __delay_ms1:
000e3b 9508      	ret
                 
                 __ANEGW1:
000e3c 95f1      	NEG  R31
000e3d 95e1      	NEG  R30
000e3e 40f0      	SBCI R31,0
000e3f 9508      	RET
                 
                 __LSLB12:
000e40 23ee      	TST  R30
000e41 2e0e      	MOV  R0,R30
000e42 2fea      	MOV  R30,R26
000e43 f019      	BREQ __LSLB12R
                 __LSLB12L:
000e44 0fee      	LSL  R30
000e45 940a      	DEC  R0
000e46 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000e47 9508      	RET
                 
                 __LSRB12:
000e48 23ee      	TST  R30
000e49 2e0e      	MOV  R0,R30
000e4a 2fea      	MOV  R30,R26
000e4b f019      	BREQ __LSRB12R
                 __LSRB12L:
000e4c 95e6      	LSR  R30
000e4d 940a      	DEC  R0
000e4e f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000e4f 9508      	RET
                 
                 __MULW12U:
000e50 9ffa      	MUL  R31,R26
000e51 2df0      	MOV  R31,R0
000e52 9feb      	MUL  R30,R27
000e53 0df0      	ADD  R31,R0
000e54 9fea      	MUL  R30,R26
000e55 2de0      	MOV  R30,R0
000e56 0df1      	ADD  R31,R1
000e57 9508      	RET
                 
                 __GETW1P:
000e58 91ed      	LD   R30,X+
000e59 91fc      	LD   R31,X
000e5a 9711      	SBIW R26,1
000e5b 9508      	RET
                 
                 __EEPROMRDB:
000e5c 99e1      	SBIC EECR,EEWE
000e5d cffe      	RJMP __EEPROMRDB
000e5e 93ff      	PUSH R31
000e5f b7ff      	IN   R31,SREG
000e60 94f8      	CLI
000e61 bbae      	OUT  EEARL,R26
000e62 bbbf      	OUT  EEARH,R27
000e63 9ae0      	SBI  EECR,EERE
000e64 b3ed      	IN   R30,EEDR
000e65 bfff      	OUT  SREG,R31
000e66 91ff      	POP  R31
000e67 9508      	RET
                 
                 __EEPROMWRB:
000e68 9be1      	SBIS EECR,EEWE
000e69 c002      	RJMP __EEPROMWRB1
000e6a 95a8      	WDR
000e6b cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000e6c b79f      	IN   R25,SREG
000e6d 94f8      	CLI
000e6e bbae      	OUT  EEARL,R26
000e6f bbbf      	OUT  EEARH,R27
000e70 9ae0      	SBI  EECR,EERE
000e71 b38d      	IN   R24,EEDR
000e72 17e8      	CP   R30,R24
000e73 f019      	BREQ __EEPROMWRB0
000e74 bbed      	OUT  EEDR,R30
000e75 9ae2      	SBI  EECR,EEMWE
000e76 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000e77 bf9f      	OUT  SREG,R25
000e78 9508      	RET
                 
                 __CPW02:
000e79 2400      	CLR  R0
000e7a 160a      	CP   R0,R26
000e7b 060b      	CPC  R0,R27
000e7c 9508      	RET
                 
                 __SAVELOCR6:
000e7d 935a      	ST   -Y,R21
                 __SAVELOCR5:
000e7e 934a      	ST   -Y,R20
                 __SAVELOCR4:
000e7f 933a      	ST   -Y,R19
                 __SAVELOCR3:
000e80 932a      	ST   -Y,R18
                 __SAVELOCR2:
000e81 931a      	ST   -Y,R17
000e82 930a      	ST   -Y,R16
000e83 9508      	RET
                 
                 __LOADLOCR6:
000e84 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000e85 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000e86 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000e87 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000e88 8119      	LDD  R17,Y+1
000e89 8108      	LD   R16,Y
000e8a 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  82 r1 :  21 r2 :   0 r3 :   0 r4 :  49 r5 :  40 r6 :  22 r7 :   4 
r8 :   7 r9 :   4 r10:   7 r11:   4 r12:   7 r13:   2 r14:   0 r15:   0 
r16:  59 r17: 109 r18:  44 r19:  48 r20:  26 r21:  37 r22:   6 r23:   1 
r24:  13 r25:   6 r26: 448 r27: 180 r28:  22 r29:   1 r30: 913 r31: 204 
x  :  13 y  : 633 z  :  51 
Registers used: 31 out of 35 (88.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  13 add   :  26 
adiw  :  55 and   :   9 andi  :   9 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  44 
brge  :   8 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   7 brmi  :   0 brne  : 150 brpl  :   2 brsh  :  24 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  : 334 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   3 cln   :   0 
clr   :  51 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   8 
cp    :  45 cpc   :  65 cpi   : 113 cpse  :   0 dec   :   3 des   :   0 
eor   :   1 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   7 inc   :   6 jmp   :  51 ld    :  46 ldd   : 347 ldi   : 425 
lds   :  41 lpm   :  25 lsl   :   5 lsr   :  15 mov   : 107 movw  :  64 
mul   :   5 muls  :   0 mulsu :   0 neg   :   2 nop   :   2 or    :  28 
ori   :   2 out   :  21 pop   :  11 push  :  11 rcall :  71 ret   :  73 
reti  :   0 rjmp  : 159 rol   :   3 ror   :   0 sbc   :   3 sbci  :  11 
sbi   :  19 sbic  :   1 sbis  :   1 sbiw  :  37 sbr   :   0 sbrc  :   0 
sbrs  :   2 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 206 std   :  82 sts   :  29 sub   :  13 subi  :  39 swap  :   1 
tst   :   4 wdr   :   2 
Instructions used: 62 out of 116 (53.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001d16   6824    622   7446   32768  22.7%
[.dseg] 0x000060 0x000296      0     54     54    2048   2.6%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 13 warnings
